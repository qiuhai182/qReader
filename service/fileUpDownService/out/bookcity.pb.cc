// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bookcity.proto

#include "bookcity.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_bookcity_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bookcity_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_bookBaseInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bookcity_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_bookDownInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bookcity_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_bookGradeInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bookcity_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_mostlybooks;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bookcity_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_adInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bookcity_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_boocomCombinekInfo;
}  // namespace protobuf_bookcity_2eproto
namespace bookCityService {
class bookBaseInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<bookBaseInfo>
      _instance;
} _bookBaseInfo_default_instance_;
class updateBookBaseInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<updateBookBaseInfo>
      _instance;
} _updateBookBaseInfo_default_instance_;
class bookDownInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<bookDownInfo>
      _instance;
} _bookDownInfo_default_instance_;
class bookGradeInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<bookGradeInfo>
      _instance;
} _bookGradeInfo_default_instance_;
class boocomCombinekInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<boocomCombinekInfo>
      _instance;
} _boocomCombinekInfo_default_instance_;
class bookMarkItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<bookMarkItem>
      _instance;
} _bookMarkItem_default_instance_;
class getAllBookInfoReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<getAllBookInfoReq>
      _instance;
} _getAllBookInfoReq_default_instance_;
class searchBookReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<searchBookReq>
      _instance;
} _searchBookReq_default_instance_;
class booksRespListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<booksRespList>
      _instance;
} _booksRespList_default_instance_;
class getBookTypeReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<getBookTypeReq>
      _instance;
} _getBookTypeReq_default_instance_;
class delBookReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<delBookReq>
      _instance;
} _delBookReq_default_instance_;
class adsReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<adsReq>
      _instance;
} _adsReq_default_instance_;
class adInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<adInfo>
      _instance;
} _adInfo_default_instance_;
class adsResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<adsRes>
      _instance;
} _adsRes_default_instance_;
class recommendBookReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<recommendBookReq>
      _instance;
} _recommendBookReq_default_instance_;
class recommendBookResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<recommendBookRes>
      _instance;
} _recommendBookRes_default_instance_;
class browseBookReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<browseBookReq>
      _instance;
} _browseBookReq_default_instance_;
class browseBookResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<browseBookRes>
      _instance;
} _browseBookRes_default_instance_;
class universalBlankReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<universalBlankReq>
      _instance;
} _universalBlankReq_default_instance_;
class mostlybooksDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<mostlybooks>
      _instance;
} _mostlybooks_default_instance_;
class mostlySearchResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<mostlySearchRes>
      _instance;
} _mostlySearchRes_default_instance_;
class fuzzySearchRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<fuzzySearchRequest>
      _instance;
} _fuzzySearchRequest_default_instance_;
}  // namespace bookCityService
namespace protobuf_bookcity_2eproto {
static void InitDefaultsbookBaseInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bookCityService::_bookBaseInfo_default_instance_;
    new (ptr) ::bookCityService::bookBaseInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookCityService::bookBaseInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_bookBaseInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsbookBaseInfo}, {}};

static void InitDefaultsupdateBookBaseInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bookCityService::_updateBookBaseInfo_default_instance_;
    new (ptr) ::bookCityService::updateBookBaseInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookCityService::updateBookBaseInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_updateBookBaseInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsupdateBookBaseInfo}, {}};

static void InitDefaultsbookDownInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bookCityService::_bookDownInfo_default_instance_;
    new (ptr) ::bookCityService::bookDownInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookCityService::bookDownInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_bookDownInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsbookDownInfo}, {}};

static void InitDefaultsbookGradeInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bookCityService::_bookGradeInfo_default_instance_;
    new (ptr) ::bookCityService::bookGradeInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookCityService::bookGradeInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_bookGradeInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsbookGradeInfo}, {}};

static void InitDefaultsboocomCombinekInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bookCityService::_boocomCombinekInfo_default_instance_;
    new (ptr) ::bookCityService::boocomCombinekInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookCityService::boocomCombinekInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_boocomCombinekInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsboocomCombinekInfo}, {
      &protobuf_bookcity_2eproto::scc_info_bookBaseInfo.base,
      &protobuf_bookcity_2eproto::scc_info_bookDownInfo.base,
      &protobuf_bookcity_2eproto::scc_info_bookGradeInfo.base,}};

static void InitDefaultsbookMarkItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bookCityService::_bookMarkItem_default_instance_;
    new (ptr) ::bookCityService::bookMarkItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookCityService::bookMarkItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_bookMarkItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsbookMarkItem}, {}};

static void InitDefaultsgetAllBookInfoReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bookCityService::_getAllBookInfoReq_default_instance_;
    new (ptr) ::bookCityService::getAllBookInfoReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookCityService::getAllBookInfoReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_getAllBookInfoReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgetAllBookInfoReq}, {}};

static void InitDefaultssearchBookReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bookCityService::_searchBookReq_default_instance_;
    new (ptr) ::bookCityService::searchBookReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookCityService::searchBookReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_searchBookReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssearchBookReq}, {}};

static void InitDefaultsbooksRespList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bookCityService::_booksRespList_default_instance_;
    new (ptr) ::bookCityService::booksRespList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookCityService::booksRespList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_booksRespList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsbooksRespList}, {
      &protobuf_bookcity_2eproto::scc_info_boocomCombinekInfo.base,}};

static void InitDefaultsgetBookTypeReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bookCityService::_getBookTypeReq_default_instance_;
    new (ptr) ::bookCityService::getBookTypeReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookCityService::getBookTypeReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_getBookTypeReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgetBookTypeReq}, {}};

static void InitDefaultsdelBookReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bookCityService::_delBookReq_default_instance_;
    new (ptr) ::bookCityService::delBookReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookCityService::delBookReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_delBookReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsdelBookReq}, {}};

static void InitDefaultsadsReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bookCityService::_adsReq_default_instance_;
    new (ptr) ::bookCityService::adsReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookCityService::adsReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_adsReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsadsReq}, {}};

static void InitDefaultsadInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bookCityService::_adInfo_default_instance_;
    new (ptr) ::bookCityService::adInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookCityService::adInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_adInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsadInfo}, {
      &protobuf_bookcity_2eproto::scc_info_boocomCombinekInfo.base,}};

static void InitDefaultsadsRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bookCityService::_adsRes_default_instance_;
    new (ptr) ::bookCityService::adsRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookCityService::adsRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_adsRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsadsRes}, {
      &protobuf_bookcity_2eproto::scc_info_adInfo.base,}};

static void InitDefaultsrecommendBookReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bookCityService::_recommendBookReq_default_instance_;
    new (ptr) ::bookCityService::recommendBookReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookCityService::recommendBookReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_recommendBookReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsrecommendBookReq}, {}};

static void InitDefaultsrecommendBookRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bookCityService::_recommendBookRes_default_instance_;
    new (ptr) ::bookCityService::recommendBookRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookCityService::recommendBookRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_recommendBookRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsrecommendBookRes}, {
      &protobuf_bookcity_2eproto::scc_info_boocomCombinekInfo.base,}};

static void InitDefaultsbrowseBookReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bookCityService::_browseBookReq_default_instance_;
    new (ptr) ::bookCityService::browseBookReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookCityService::browseBookReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_browseBookReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsbrowseBookReq}, {}};

static void InitDefaultsbrowseBookRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bookCityService::_browseBookRes_default_instance_;
    new (ptr) ::bookCityService::browseBookRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookCityService::browseBookRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_browseBookRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsbrowseBookRes}, {
      &protobuf_bookcity_2eproto::scc_info_boocomCombinekInfo.base,}};

static void InitDefaultsuniversalBlankReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bookCityService::_universalBlankReq_default_instance_;
    new (ptr) ::bookCityService::universalBlankReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookCityService::universalBlankReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_universalBlankReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsuniversalBlankReq}, {}};

static void InitDefaultsmostlybooks() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bookCityService::_mostlybooks_default_instance_;
    new (ptr) ::bookCityService::mostlybooks();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookCityService::mostlybooks::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_mostlybooks =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsmostlybooks}, {}};

static void InitDefaultsmostlySearchRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bookCityService::_mostlySearchRes_default_instance_;
    new (ptr) ::bookCityService::mostlySearchRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookCityService::mostlySearchRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_mostlySearchRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsmostlySearchRes}, {
      &protobuf_bookcity_2eproto::scc_info_mostlybooks.base,}};

static void InitDefaultsfuzzySearchRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bookCityService::_fuzzySearchRequest_default_instance_;
    new (ptr) ::bookCityService::fuzzySearchRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookCityService::fuzzySearchRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_fuzzySearchRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsfuzzySearchRequest}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_bookBaseInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_updateBookBaseInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_bookDownInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_bookGradeInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_boocomCombinekInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_bookMarkItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_getAllBookInfoReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_searchBookReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_booksRespList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_getBookTypeReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_delBookReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_adsReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_adInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_adsRes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_recommendBookReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_recommendBookRes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_browseBookReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_browseBookRes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_universalBlankReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_mostlybooks.base);
  ::google::protobuf::internal::InitSCC(&scc_info_mostlySearchRes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_fuzzySearchRequest.base);
}

::google::protobuf::Metadata file_level_metadata[22];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::bookBaseInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::bookBaseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::bookBaseInfo, bookname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::bookBaseInfo, authorname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::bookBaseInfo, booktype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::bookBaseInfo, publishtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::bookBaseInfo, publishhouse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::bookBaseInfo, bookintro_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::bookBaseInfo, bookpage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::bookBaseInfo, languagetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::bookBaseInfo, bookid_),
  0,
  1,
  6,
  2,
  3,
  4,
  7,
  8,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::updateBookBaseInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::updateBookBaseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::updateBookBaseInfo, bookname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::updateBookBaseInfo, authorname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::updateBookBaseInfo, booktype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::updateBookBaseInfo, publishtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::updateBookBaseInfo, publishhouse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::updateBookBaseInfo, bookintro_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::updateBookBaseInfo, bookpage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::updateBookBaseInfo, languagetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::updateBookBaseInfo, bookid_),
  0,
  1,
  6,
  2,
  3,
  4,
  7,
  8,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::bookDownInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::bookDownInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::bookDownInfo, filesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::bookDownInfo, bookheadurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::bookDownInfo, bookdownurl_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::bookGradeInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::bookGradeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::bookGradeInfo, remarkcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::bookGradeInfo, averagescore_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::boocomCombinekInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::boocomCombinekInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::boocomCombinekInfo, bookid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::boocomCombinekInfo, baseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::boocomCombinekInfo, downinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::boocomCombinekInfo, gradeinfo_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::bookMarkItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::bookMarkItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::bookMarkItem, bookid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::getAllBookInfoReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::getAllBookInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::getAllBookInfoReq, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::getAllBookInfoReq, size_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::searchBookReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::searchBookReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::searchBookReq, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::searchBookReq, bookid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::searchBookReq, bookname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::searchBookReq, authorname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::searchBookReq, booktype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::searchBookReq, publishhouse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::searchBookReq, daytime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::searchBookReq, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::searchBookReq, count_),
  5,
  0,
  1,
  2,
  6,
  3,
  4,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::booksRespList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::booksRespList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::booksRespList, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::booksRespList, lists_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::booksRespList, count_),
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::getBookTypeReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::getBookTypeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::getBookTypeReq, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::getBookTypeReq, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::getBookTypeReq, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::getBookTypeReq, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::getBookTypeReq, sortmethod_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::delBookReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::delBookReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::delBookReq, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::delBookReq, bookid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::delBookReq, deltime_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::adsReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::adsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::adsReq, bookid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::adsReq, adurl_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::adInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::adInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::adInfo, adurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::adInfo, lists_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::adsRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::adsRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::adsRes, lists_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::adsRes, count_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::recommendBookReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::recommendBookReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::recommendBookReq, userid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::recommendBookRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::recommendBookRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::recommendBookRes, lists_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::recommendBookRes, count_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::browseBookReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::browseBookReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::browseBookReq, userid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::browseBookRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::browseBookRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::browseBookRes, lists_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::browseBookRes, count_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::universalBlankReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::universalBlankReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::universalBlankReq, daytime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::universalBlankReq, count_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::mostlybooks, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::mostlybooks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::mostlybooks, bookid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::mostlybooks, bookname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::mostlybooks, searchtimes_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::mostlySearchRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::mostlySearchRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::mostlySearchRes, lists_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::mostlySearchRes, count_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::fuzzySearchRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::fuzzySearchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::fuzzySearchRequest, words_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::fuzzySearchRequest, daytime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::fuzzySearchRequest, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookCityService::fuzzySearchRequest, offset_),
  0,
  1,
  2,
  3,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 14, sizeof(::bookCityService::bookBaseInfo)},
  { 23, 37, sizeof(::bookCityService::updateBookBaseInfo)},
  { 46, 54, sizeof(::bookCityService::bookDownInfo)},
  { 57, 64, sizeof(::bookCityService::bookGradeInfo)},
  { 66, 75, sizeof(::bookCityService::boocomCombinekInfo)},
  { 79, 85, sizeof(::bookCityService::bookMarkItem)},
  { 86, 93, sizeof(::bookCityService::getAllBookInfoReq)},
  { 95, 109, sizeof(::bookCityService::searchBookReq)},
  { 118, 126, sizeof(::bookCityService::booksRespList)},
  { 129, 139, sizeof(::bookCityService::getBookTypeReq)},
  { 144, 152, sizeof(::bookCityService::delBookReq)},
  { 155, 162, sizeof(::bookCityService::adsReq)},
  { 164, 171, sizeof(::bookCityService::adInfo)},
  { 173, 180, sizeof(::bookCityService::adsRes)},
  { 182, 188, sizeof(::bookCityService::recommendBookReq)},
  { 189, 196, sizeof(::bookCityService::recommendBookRes)},
  { 198, 204, sizeof(::bookCityService::browseBookReq)},
  { 205, 212, sizeof(::bookCityService::browseBookRes)},
  { 214, 221, sizeof(::bookCityService::universalBlankReq)},
  { 223, 231, sizeof(::bookCityService::mostlybooks)},
  { 234, 241, sizeof(::bookCityService::mostlySearchRes)},
  { 243, 252, sizeof(::bookCityService::fuzzySearchRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookCityService::_bookBaseInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookCityService::_updateBookBaseInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookCityService::_bookDownInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookCityService::_bookGradeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookCityService::_boocomCombinekInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookCityService::_bookMarkItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookCityService::_getAllBookInfoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookCityService::_searchBookReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookCityService::_booksRespList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookCityService::_getBookTypeReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookCityService::_delBookReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookCityService::_adsReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookCityService::_adInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookCityService::_adsRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookCityService::_recommendBookReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookCityService::_recommendBookRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookCityService::_browseBookReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookCityService::_browseBookRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookCityService::_universalBlankReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookCityService::_mostlybooks_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookCityService::_mostlySearchRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookCityService::_fuzzySearchRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "bookcity.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 22);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016bookcity.proto\022\017bookCityService\032\014commo"
      "n.proto\"\274\001\n\014bookBaseInfo\022\020\n\010bookName\030\001 \002"
      "(\t\022\022\n\nauthorName\030\002 \002(\t\022\020\n\010bookType\030\003 \002(\005"
      "\022\023\n\013publishTime\030\004 \002(\t\022\024\n\014publishHouse\030\005 "
      "\002(\t\022\021\n\tbookIntro\030\006 \002(\t\022\020\n\010bookPage\030\007 \002(\005"
      "\022\024\n\014languageType\030\010 \002(\005\022\016\n\006bookId\030\t \001(\t\"\302"
      "\001\n\022updateBookBaseInfo\022\020\n\010bookName\030\001 \001(\t\022"
      "\022\n\nauthorName\030\002 \001(\t\022\020\n\010bookType\030\003 \001(\005\022\023\n"
      "\013publishTime\030\004 \001(\t\022\024\n\014publishHouse\030\005 \001(\t"
      "\022\021\n\tbookIntro\030\006 \001(\t\022\020\n\010bookPage\030\007 \001(\005\022\024\n"
      "\014languageType\030\010 \001(\005\022\016\n\006bookId\030\t \002(\t\"J\n\014b"
      "ookDownInfo\022\020\n\010fileSize\030\001 \002(\005\022\023\n\013bookHea"
      "dUrl\030\002 \002(\t\022\023\n\013bookDownUrl\030\003 \002(\t\":\n\rbookG"
      "radeInfo\022\023\n\013remarkCount\030\001 \002(\005\022\024\n\014average"
      "Score\030\002 \002(\002\"\271\001\n\022boocomCombinekInfo\022\016\n\006bo"
      "okId\030\001 \002(\t\022/\n\010baseInfo\030\002 \002(\0132\035.bookCityS"
      "ervice.bookBaseInfo\022/\n\010downInfo\030\003 \002(\0132\035."
      "bookCityService.bookDownInfo\0221\n\tgradeInf"
      "o\030\004 \002(\0132\036.bookCityService.bookGradeInfo\""
      "\036\n\014bookMarkItem\022\016\n\006bookId\030\001 \002(\t\"1\n\021getAl"
      "lBookInfoReq\022\016\n\006offset\030\001 \001(\005\022\014\n\004size\030\002 \001"
      "(\005\"\255\001\n\rsearchBookReq\022\016\n\006userId\030\001 \001(\005\022\016\n\006"
      "bookId\030\002 \001(\t\022\020\n\010bookName\030\003 \001(\t\022\022\n\nauthor"
      "Name\030\004 \001(\t\022\020\n\010bookType\030\005 \001(\005\022\024\n\014publishH"
      "ouse\030\006 \001(\t\022\017\n\007dayTime\030\007 \002(\t\022\016\n\006offset\030\010 "
      "\002(\005\022\r\n\005count\030\t \002(\005\"b\n\rbooksRespList\022\016\n\006u"
      "serId\030\001 \001(\t\0222\n\005lists\030\002 \003(\0132#.bookCitySer"
      "vice.boocomCombinekInfo\022\r\n\005count\030\003 \002(\005\"a"
      "\n\016getBookTypeReq\022\016\n\006userId\030\001 \001(\t\022\014\n\004type"
      "\030\002 \002(\t\022\016\n\006offset\030\003 \001(\005\022\r\n\005count\030\004 \002(\005\022\022\n"
      "\nsortMethod\030\005 \001(\005\"=\n\ndelBookReq\022\016\n\006userI"
      "d\030\001 \002(\t\022\016\n\006bookId\030\002 \002(\t\022\017\n\007delTime\030\003 \001(\t"
      "\"\'\n\006adsReq\022\016\n\006bookId\030\001 \001(\t\022\r\n\005adUrl\030\002 \001("
      "\t\"K\n\006adInfo\022\r\n\005adUrl\030\001 \001(\t\0222\n\005lists\030\002 \003("
      "\0132#.bookCityService.boocomCombinekInfo\"\?"
      "\n\006adsRes\022&\n\005lists\030\001 \003(\0132\027.bookCityServic"
      "e.adInfo\022\r\n\005count\030\002 \002(\005\"\"\n\020recommendBook"
      "Req\022\016\n\006userId\030\001 \002(\005\"U\n\020recommendBookRes\022"
      "2\n\005lists\030\001 \003(\0132#.bookCityService.boocomC"
      "ombinekInfo\022\r\n\005count\030\002 \002(\005\"\037\n\rbrowseBook"
      "Req\022\016\n\006userId\030\001 \002(\005\"R\n\rbrowseBookRes\0222\n\005"
      "lists\030\001 \003(\0132#.bookCityService.boocomComb"
      "inekInfo\022\r\n\005count\030\002 \002(\005\"3\n\021universalBlan"
      "kReq\022\017\n\007dayTime\030\001 \001(\t\022\r\n\005count\030\002 \001(\005\"D\n\013"
      "mostlybooks\022\016\n\006bookId\030\001 \002(\t\022\020\n\010bookName\030"
      "\002 \002(\t\022\023\n\013searchTimes\030\003 \002(\005\"M\n\017mostlySear"
      "chRes\022+\n\005lists\030\001 \003(\0132\034.bookCityService.m"
      "ostlybooks\022\r\n\005count\030\002 \002(\005\"S\n\022fuzzySearch"
      "Request\022\r\n\005words\030\001 \002(\t\022\017\n\007dayTime\030\002 \002(\t\022"
      "\r\n\005count\030\003 \002(\005\022\016\n\006offset\030\004 \002(\0052\262\007\n\017bookC"
      "ityService\022J\n\016addBookInfoFun\022\035.bookCityS"
      "ervice.bookBaseInfo\032\031.commonService.comm"
      "onResp\022S\n\021searchBookInfoFun\022\036.bookCitySe"
      "rvice.searchBookReq\032\036.bookCityService.bo"
      "oksRespList\022P\n\016setBookInfoFun\022#.bookCity"
      "Service.updateBookBaseInfo\032\031.commonServi"
      "ce.commonResp\022W\n\021getAllBookInfoFun\022\".boo"
      "kCityService.getAllBookInfoReq\032\036.bookCit"
      "yService.booksRespList\022L\n\022delBookInfoByI"
      "dFun\022\033.bookCityService.delBookReq\032\031.comm"
      "onService.commonResp\022A\n\rgetBookADSFun\022\027."
      "bookCityService.adsReq\032\027.bookCityService"
      ".adsRes\022[\n\023getRecommendBookFun\022!.bookCit"
      "yService.recommendBookReq\032!.bookCityServ"
      "ice.recommendBookRes\022R\n\020getBrowseBookFun"
      "\022\036.bookCityService.browseBookReq\032\036.bookC"
      "ityService.browseBookRes\022Z\n\022getMostlySea"
      "rchFun\022\".bookCityService.universalBlankR"
      "eq\032 .bookCityService.mostlySearchRes\022Y\n\023"
      "getPopularSearchFun\022\".bookCityService.un"
      "iversalBlankReq\032\036.bookCityService.booksR"
      "espList\022Z\n\023FuzzySearchBooksFun\022#.bookCit"
      "yService.fuzzySearchRequest\032\036.bookCitySe"
      "rvice.booksRespListB\003\200\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2944);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "bookcity.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_bookcity_2eproto
namespace bookCityService {

// ===================================================================

void bookBaseInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int bookBaseInfo::kBookNameFieldNumber;
const int bookBaseInfo::kAuthorNameFieldNumber;
const int bookBaseInfo::kBookTypeFieldNumber;
const int bookBaseInfo::kPublishTimeFieldNumber;
const int bookBaseInfo::kPublishHouseFieldNumber;
const int bookBaseInfo::kBookIntroFieldNumber;
const int bookBaseInfo::kBookPageFieldNumber;
const int bookBaseInfo::kLanguageTypeFieldNumber;
const int bookBaseInfo::kBookIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

bookBaseInfo::bookBaseInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bookcity_2eproto::scc_info_bookBaseInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookCityService.bookBaseInfo)
}
bookBaseInfo::bookBaseInfo(const bookBaseInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bookname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bookname()) {
    bookname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookname_);
  }
  authorname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_authorname()) {
    authorname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authorname_);
  }
  publishtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_publishtime()) {
    publishtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publishtime_);
  }
  publishhouse_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_publishhouse()) {
    publishhouse_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publishhouse_);
  }
  bookintro_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bookintro()) {
    bookintro_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookintro_);
  }
  bookid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bookid()) {
    bookid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookid_);
  }
  ::memcpy(&booktype_, &from.booktype_,
    static_cast<size_t>(reinterpret_cast<char*>(&languagetype_) -
    reinterpret_cast<char*>(&booktype_)) + sizeof(languagetype_));
  // @@protoc_insertion_point(copy_constructor:bookCityService.bookBaseInfo)
}

void bookBaseInfo::SharedCtor() {
  bookname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authorname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publishtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publishhouse_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bookintro_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bookid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&booktype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&languagetype_) -
      reinterpret_cast<char*>(&booktype_)) + sizeof(languagetype_));
}

bookBaseInfo::~bookBaseInfo() {
  // @@protoc_insertion_point(destructor:bookCityService.bookBaseInfo)
  SharedDtor();
}

void bookBaseInfo::SharedDtor() {
  bookname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authorname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publishtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publishhouse_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bookintro_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bookid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void bookBaseInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* bookBaseInfo::descriptor() {
  ::protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const bookBaseInfo& bookBaseInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bookcity_2eproto::scc_info_bookBaseInfo.base);
  return *internal_default_instance();
}


void bookBaseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:bookCityService.bookBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      bookname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      authorname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      publishtime_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      publishhouse_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      bookintro_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      bookid_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&booktype_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bookpage_) -
        reinterpret_cast<char*>(&booktype_)) + sizeof(bookpage_));
  }
  languagetype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool bookBaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookCityService.bookBaseInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string bookName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bookname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bookname().data(), static_cast<int>(this->bookname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.bookBaseInfo.bookName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string authorName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authorname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->authorname().data(), static_cast<int>(this->authorname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.bookBaseInfo.authorName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 bookType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_booktype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &booktype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string publishTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_publishtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->publishtime().data(), static_cast<int>(this->publishtime().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.bookBaseInfo.publishTime");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string publishHouse = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_publishhouse()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->publishhouse().data(), static_cast<int>(this->publishhouse().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.bookBaseInfo.publishHouse");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string bookIntro = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bookintro()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bookintro().data(), static_cast<int>(this->bookintro().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.bookBaseInfo.bookIntro");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 bookPage = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_bookpage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bookpage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 languageType = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_languagetype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &languagetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bookId = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bookid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bookid().data(), static_cast<int>(this->bookid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.bookBaseInfo.bookId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookCityService.bookBaseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookCityService.bookBaseInfo)
  return false;
#undef DO_
}

void bookBaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookCityService.bookBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string bookName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookname().data(), static_cast<int>(this->bookname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.bookBaseInfo.bookName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bookname(), output);
  }

  // required string authorName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authorname().data(), static_cast<int>(this->authorname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.bookBaseInfo.authorName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->authorname(), output);
  }

  // required int32 bookType = 3;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->booktype(), output);
  }

  // required string publishTime = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->publishtime().data(), static_cast<int>(this->publishtime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.bookBaseInfo.publishTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->publishtime(), output);
  }

  // required string publishHouse = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->publishhouse().data(), static_cast<int>(this->publishhouse().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.bookBaseInfo.publishHouse");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->publishhouse(), output);
  }

  // required string bookIntro = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookintro().data(), static_cast<int>(this->bookintro().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.bookBaseInfo.bookIntro");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->bookintro(), output);
  }

  // required int32 bookPage = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->bookpage(), output);
  }

  // required int32 languageType = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->languagetype(), output);
  }

  // optional string bookId = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookid().data(), static_cast<int>(this->bookid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.bookBaseInfo.bookId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->bookid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bookCityService.bookBaseInfo)
}

::google::protobuf::uint8* bookBaseInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookCityService.bookBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string bookName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookname().data(), static_cast<int>(this->bookname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.bookBaseInfo.bookName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bookname(), target);
  }

  // required string authorName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authorname().data(), static_cast<int>(this->authorname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.bookBaseInfo.authorName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->authorname(), target);
  }

  // required int32 bookType = 3;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->booktype(), target);
  }

  // required string publishTime = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->publishtime().data(), static_cast<int>(this->publishtime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.bookBaseInfo.publishTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->publishtime(), target);
  }

  // required string publishHouse = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->publishhouse().data(), static_cast<int>(this->publishhouse().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.bookBaseInfo.publishHouse");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->publishhouse(), target);
  }

  // required string bookIntro = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookintro().data(), static_cast<int>(this->bookintro().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.bookBaseInfo.bookIntro");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->bookintro(), target);
  }

  // required int32 bookPage = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->bookpage(), target);
  }

  // required int32 languageType = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->languagetype(), target);
  }

  // optional string bookId = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookid().data(), static_cast<int>(this->bookid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.bookBaseInfo.bookId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->bookid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookCityService.bookBaseInfo)
  return target;
}

size_t bookBaseInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:bookCityService.bookBaseInfo)
  size_t total_size = 0;

  if (has_bookname()) {
    // required string bookName = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bookname());
  }

  if (has_authorname()) {
    // required string authorName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->authorname());
  }

  if (has_publishtime()) {
    // required string publishTime = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->publishtime());
  }

  if (has_publishhouse()) {
    // required string publishHouse = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->publishhouse());
  }

  if (has_bookintro()) {
    // required string bookIntro = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bookintro());
  }

  if (has_booktype()) {
    // required int32 bookType = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->booktype());
  }

  if (has_bookpage()) {
    // required int32 bookPage = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bookpage());
  }

  if (has_languagetype()) {
    // required int32 languageType = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->languagetype());
  }

  return total_size;
}
size_t bookBaseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookCityService.bookBaseInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000001df) ^ 0x000001df) == 0) {  // All required fields are present.
    // required string bookName = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bookname());

    // required string authorName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->authorname());

    // required string publishTime = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->publishtime());

    // required string publishHouse = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->publishhouse());

    // required string bookIntro = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bookintro());

    // required int32 bookType = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->booktype());

    // required int32 bookPage = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bookpage());

    // required int32 languageType = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->languagetype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string bookId = 9;
  if (has_bookid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bookid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void bookBaseInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookCityService.bookBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const bookBaseInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const bookBaseInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookCityService.bookBaseInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookCityService.bookBaseInfo)
    MergeFrom(*source);
  }
}

void bookBaseInfo::MergeFrom(const bookBaseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookCityService.bookBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_bookname();
      bookname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_authorname();
      authorname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authorname_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_publishtime();
      publishtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publishtime_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_publishhouse();
      publishhouse_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publishhouse_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_bookintro();
      bookintro_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookintro_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_bookid();
      bookid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookid_);
    }
    if (cached_has_bits & 0x00000040u) {
      booktype_ = from.booktype_;
    }
    if (cached_has_bits & 0x00000080u) {
      bookpage_ = from.bookpage_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_languagetype(from.languagetype());
  }
}

void bookBaseInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookCityService.bookBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void bookBaseInfo::CopyFrom(const bookBaseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookCityService.bookBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool bookBaseInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001df) != 0x000001df) return false;
  return true;
}

void bookBaseInfo::Swap(bookBaseInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void bookBaseInfo::InternalSwap(bookBaseInfo* other) {
  using std::swap;
  bookname_.Swap(&other->bookname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  authorname_.Swap(&other->authorname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  publishtime_.Swap(&other->publishtime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  publishhouse_.Swap(&other->publishhouse_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bookintro_.Swap(&other->bookintro_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bookid_.Swap(&other->bookid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(booktype_, other->booktype_);
  swap(bookpage_, other->bookpage_);
  swap(languagetype_, other->languagetype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata bookBaseInfo::GetMetadata() const {
  protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void updateBookBaseInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int updateBookBaseInfo::kBookNameFieldNumber;
const int updateBookBaseInfo::kAuthorNameFieldNumber;
const int updateBookBaseInfo::kBookTypeFieldNumber;
const int updateBookBaseInfo::kPublishTimeFieldNumber;
const int updateBookBaseInfo::kPublishHouseFieldNumber;
const int updateBookBaseInfo::kBookIntroFieldNumber;
const int updateBookBaseInfo::kBookPageFieldNumber;
const int updateBookBaseInfo::kLanguageTypeFieldNumber;
const int updateBookBaseInfo::kBookIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

updateBookBaseInfo::updateBookBaseInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bookcity_2eproto::scc_info_updateBookBaseInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookCityService.updateBookBaseInfo)
}
updateBookBaseInfo::updateBookBaseInfo(const updateBookBaseInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bookname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bookname()) {
    bookname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookname_);
  }
  authorname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_authorname()) {
    authorname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authorname_);
  }
  publishtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_publishtime()) {
    publishtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publishtime_);
  }
  publishhouse_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_publishhouse()) {
    publishhouse_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publishhouse_);
  }
  bookintro_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bookintro()) {
    bookintro_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookintro_);
  }
  bookid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bookid()) {
    bookid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookid_);
  }
  ::memcpy(&booktype_, &from.booktype_,
    static_cast<size_t>(reinterpret_cast<char*>(&languagetype_) -
    reinterpret_cast<char*>(&booktype_)) + sizeof(languagetype_));
  // @@protoc_insertion_point(copy_constructor:bookCityService.updateBookBaseInfo)
}

void updateBookBaseInfo::SharedCtor() {
  bookname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authorname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publishtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publishhouse_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bookintro_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bookid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&booktype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&languagetype_) -
      reinterpret_cast<char*>(&booktype_)) + sizeof(languagetype_));
}

updateBookBaseInfo::~updateBookBaseInfo() {
  // @@protoc_insertion_point(destructor:bookCityService.updateBookBaseInfo)
  SharedDtor();
}

void updateBookBaseInfo::SharedDtor() {
  bookname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authorname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publishtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publishhouse_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bookintro_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bookid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void updateBookBaseInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* updateBookBaseInfo::descriptor() {
  ::protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const updateBookBaseInfo& updateBookBaseInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bookcity_2eproto::scc_info_updateBookBaseInfo.base);
  return *internal_default_instance();
}


void updateBookBaseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:bookCityService.updateBookBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      bookname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      authorname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      publishtime_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      publishhouse_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      bookintro_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      bookid_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&booktype_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bookpage_) -
        reinterpret_cast<char*>(&booktype_)) + sizeof(bookpage_));
  }
  languagetype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool updateBookBaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookCityService.updateBookBaseInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string bookName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bookname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bookname().data(), static_cast<int>(this->bookname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.updateBookBaseInfo.bookName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string authorName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authorname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->authorname().data(), static_cast<int>(this->authorname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.updateBookBaseInfo.authorName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 bookType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_booktype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &booktype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string publishTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_publishtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->publishtime().data(), static_cast<int>(this->publishtime().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.updateBookBaseInfo.publishTime");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string publishHouse = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_publishhouse()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->publishhouse().data(), static_cast<int>(this->publishhouse().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.updateBookBaseInfo.publishHouse");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bookIntro = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bookintro()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bookintro().data(), static_cast<int>(this->bookintro().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.updateBookBaseInfo.bookIntro");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 bookPage = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_bookpage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bookpage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 languageType = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_languagetype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &languagetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string bookId = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bookid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bookid().data(), static_cast<int>(this->bookid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.updateBookBaseInfo.bookId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookCityService.updateBookBaseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookCityService.updateBookBaseInfo)
  return false;
#undef DO_
}

void updateBookBaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookCityService.updateBookBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string bookName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookname().data(), static_cast<int>(this->bookname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.updateBookBaseInfo.bookName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bookname(), output);
  }

  // optional string authorName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authorname().data(), static_cast<int>(this->authorname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.updateBookBaseInfo.authorName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->authorname(), output);
  }

  // optional int32 bookType = 3;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->booktype(), output);
  }

  // optional string publishTime = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->publishtime().data(), static_cast<int>(this->publishtime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.updateBookBaseInfo.publishTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->publishtime(), output);
  }

  // optional string publishHouse = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->publishhouse().data(), static_cast<int>(this->publishhouse().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.updateBookBaseInfo.publishHouse");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->publishhouse(), output);
  }

  // optional string bookIntro = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookintro().data(), static_cast<int>(this->bookintro().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.updateBookBaseInfo.bookIntro");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->bookintro(), output);
  }

  // optional int32 bookPage = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->bookpage(), output);
  }

  // optional int32 languageType = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->languagetype(), output);
  }

  // required string bookId = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookid().data(), static_cast<int>(this->bookid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.updateBookBaseInfo.bookId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->bookid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bookCityService.updateBookBaseInfo)
}

::google::protobuf::uint8* updateBookBaseInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookCityService.updateBookBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string bookName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookname().data(), static_cast<int>(this->bookname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.updateBookBaseInfo.bookName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bookname(), target);
  }

  // optional string authorName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authorname().data(), static_cast<int>(this->authorname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.updateBookBaseInfo.authorName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->authorname(), target);
  }

  // optional int32 bookType = 3;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->booktype(), target);
  }

  // optional string publishTime = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->publishtime().data(), static_cast<int>(this->publishtime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.updateBookBaseInfo.publishTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->publishtime(), target);
  }

  // optional string publishHouse = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->publishhouse().data(), static_cast<int>(this->publishhouse().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.updateBookBaseInfo.publishHouse");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->publishhouse(), target);
  }

  // optional string bookIntro = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookintro().data(), static_cast<int>(this->bookintro().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.updateBookBaseInfo.bookIntro");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->bookintro(), target);
  }

  // optional int32 bookPage = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->bookpage(), target);
  }

  // optional int32 languageType = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->languagetype(), target);
  }

  // required string bookId = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookid().data(), static_cast<int>(this->bookid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.updateBookBaseInfo.bookId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->bookid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookCityService.updateBookBaseInfo)
  return target;
}

size_t updateBookBaseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookCityService.updateBookBaseInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string bookId = 9;
  if (has_bookid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bookid());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string bookName = 1;
    if (has_bookname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bookname());
    }

    // optional string authorName = 2;
    if (has_authorname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->authorname());
    }

    // optional string publishTime = 4;
    if (has_publishtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->publishtime());
    }

    // optional string publishHouse = 5;
    if (has_publishhouse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->publishhouse());
    }

    // optional string bookIntro = 6;
    if (has_bookintro()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bookintro());
    }

  }
  if (_has_bits_[0 / 32] & 192u) {
    // optional int32 bookType = 3;
    if (has_booktype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->booktype());
    }

    // optional int32 bookPage = 7;
    if (has_bookpage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bookpage());
    }

  }
  // optional int32 languageType = 8;
  if (has_languagetype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->languagetype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void updateBookBaseInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookCityService.updateBookBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const updateBookBaseInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const updateBookBaseInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookCityService.updateBookBaseInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookCityService.updateBookBaseInfo)
    MergeFrom(*source);
  }
}

void updateBookBaseInfo::MergeFrom(const updateBookBaseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookCityService.updateBookBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_bookname();
      bookname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_authorname();
      authorname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authorname_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_publishtime();
      publishtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publishtime_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_publishhouse();
      publishhouse_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publishhouse_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_bookintro();
      bookintro_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookintro_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_bookid();
      bookid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookid_);
    }
    if (cached_has_bits & 0x00000040u) {
      booktype_ = from.booktype_;
    }
    if (cached_has_bits & 0x00000080u) {
      bookpage_ = from.bookpage_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_languagetype(from.languagetype());
  }
}

void updateBookBaseInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookCityService.updateBookBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void updateBookBaseInfo::CopyFrom(const updateBookBaseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookCityService.updateBookBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool updateBookBaseInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000020) != 0x00000020) return false;
  return true;
}

void updateBookBaseInfo::Swap(updateBookBaseInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void updateBookBaseInfo::InternalSwap(updateBookBaseInfo* other) {
  using std::swap;
  bookname_.Swap(&other->bookname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  authorname_.Swap(&other->authorname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  publishtime_.Swap(&other->publishtime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  publishhouse_.Swap(&other->publishhouse_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bookintro_.Swap(&other->bookintro_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bookid_.Swap(&other->bookid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(booktype_, other->booktype_);
  swap(bookpage_, other->bookpage_);
  swap(languagetype_, other->languagetype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata updateBookBaseInfo::GetMetadata() const {
  protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void bookDownInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int bookDownInfo::kFileSizeFieldNumber;
const int bookDownInfo::kBookHeadUrlFieldNumber;
const int bookDownInfo::kBookDownUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

bookDownInfo::bookDownInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bookcity_2eproto::scc_info_bookDownInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookCityService.bookDownInfo)
}
bookDownInfo::bookDownInfo(const bookDownInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bookheadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bookheadurl()) {
    bookheadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookheadurl_);
  }
  bookdownurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bookdownurl()) {
    bookdownurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookdownurl_);
  }
  filesize_ = from.filesize_;
  // @@protoc_insertion_point(copy_constructor:bookCityService.bookDownInfo)
}

void bookDownInfo::SharedCtor() {
  bookheadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bookdownurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filesize_ = 0;
}

bookDownInfo::~bookDownInfo() {
  // @@protoc_insertion_point(destructor:bookCityService.bookDownInfo)
  SharedDtor();
}

void bookDownInfo::SharedDtor() {
  bookheadurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bookdownurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void bookDownInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* bookDownInfo::descriptor() {
  ::protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const bookDownInfo& bookDownInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bookcity_2eproto::scc_info_bookDownInfo.base);
  return *internal_default_instance();
}


void bookDownInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:bookCityService.bookDownInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      bookheadurl_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      bookdownurl_.ClearNonDefaultToEmptyNoArena();
    }
  }
  filesize_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool bookDownInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookCityService.bookDownInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 fileSize = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_filesize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &filesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string bookHeadUrl = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bookheadurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bookheadurl().data(), static_cast<int>(this->bookheadurl().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.bookDownInfo.bookHeadUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string bookDownUrl = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bookdownurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bookdownurl().data(), static_cast<int>(this->bookdownurl().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.bookDownInfo.bookDownUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookCityService.bookDownInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookCityService.bookDownInfo)
  return false;
#undef DO_
}

void bookDownInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookCityService.bookDownInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 fileSize = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->filesize(), output);
  }

  // required string bookHeadUrl = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookheadurl().data(), static_cast<int>(this->bookheadurl().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.bookDownInfo.bookHeadUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->bookheadurl(), output);
  }

  // required string bookDownUrl = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookdownurl().data(), static_cast<int>(this->bookdownurl().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.bookDownInfo.bookDownUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->bookdownurl(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bookCityService.bookDownInfo)
}

::google::protobuf::uint8* bookDownInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookCityService.bookDownInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 fileSize = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->filesize(), target);
  }

  // required string bookHeadUrl = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookheadurl().data(), static_cast<int>(this->bookheadurl().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.bookDownInfo.bookHeadUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bookheadurl(), target);
  }

  // required string bookDownUrl = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookdownurl().data(), static_cast<int>(this->bookdownurl().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.bookDownInfo.bookDownUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->bookdownurl(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookCityService.bookDownInfo)
  return target;
}

size_t bookDownInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:bookCityService.bookDownInfo)
  size_t total_size = 0;

  if (has_bookheadurl()) {
    // required string bookHeadUrl = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bookheadurl());
  }

  if (has_bookdownurl()) {
    // required string bookDownUrl = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bookdownurl());
  }

  if (has_filesize()) {
    // required int32 fileSize = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->filesize());
  }

  return total_size;
}
size_t bookDownInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookCityService.bookDownInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string bookHeadUrl = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bookheadurl());

    // required string bookDownUrl = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bookdownurl());

    // required int32 fileSize = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->filesize());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void bookDownInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookCityService.bookDownInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const bookDownInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const bookDownInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookCityService.bookDownInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookCityService.bookDownInfo)
    MergeFrom(*source);
  }
}

void bookDownInfo::MergeFrom(const bookDownInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookCityService.bookDownInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_bookheadurl();
      bookheadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookheadurl_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_bookdownurl();
      bookdownurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookdownurl_);
    }
    if (cached_has_bits & 0x00000004u) {
      filesize_ = from.filesize_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void bookDownInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookCityService.bookDownInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void bookDownInfo::CopyFrom(const bookDownInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookCityService.bookDownInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool bookDownInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void bookDownInfo::Swap(bookDownInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void bookDownInfo::InternalSwap(bookDownInfo* other) {
  using std::swap;
  bookheadurl_.Swap(&other->bookheadurl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bookdownurl_.Swap(&other->bookdownurl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(filesize_, other->filesize_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata bookDownInfo::GetMetadata() const {
  protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void bookGradeInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int bookGradeInfo::kRemarkCountFieldNumber;
const int bookGradeInfo::kAverageScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

bookGradeInfo::bookGradeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bookcity_2eproto::scc_info_bookGradeInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookCityService.bookGradeInfo)
}
bookGradeInfo::bookGradeInfo(const bookGradeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&remarkcount_, &from.remarkcount_,
    static_cast<size_t>(reinterpret_cast<char*>(&averagescore_) -
    reinterpret_cast<char*>(&remarkcount_)) + sizeof(averagescore_));
  // @@protoc_insertion_point(copy_constructor:bookCityService.bookGradeInfo)
}

void bookGradeInfo::SharedCtor() {
  ::memset(&remarkcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&averagescore_) -
      reinterpret_cast<char*>(&remarkcount_)) + sizeof(averagescore_));
}

bookGradeInfo::~bookGradeInfo() {
  // @@protoc_insertion_point(destructor:bookCityService.bookGradeInfo)
  SharedDtor();
}

void bookGradeInfo::SharedDtor() {
}

void bookGradeInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* bookGradeInfo::descriptor() {
  ::protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const bookGradeInfo& bookGradeInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bookcity_2eproto::scc_info_bookGradeInfo.base);
  return *internal_default_instance();
}


void bookGradeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:bookCityService.bookGradeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&remarkcount_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&averagescore_) -
        reinterpret_cast<char*>(&remarkcount_)) + sizeof(averagescore_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool bookGradeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookCityService.bookGradeInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 remarkCount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_remarkcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &remarkcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float averageScore = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_averagescore();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &averagescore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookCityService.bookGradeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookCityService.bookGradeInfo)
  return false;
#undef DO_
}

void bookGradeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookCityService.bookGradeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 remarkCount = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->remarkcount(), output);
  }

  // required float averageScore = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->averagescore(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bookCityService.bookGradeInfo)
}

::google::protobuf::uint8* bookGradeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookCityService.bookGradeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 remarkCount = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->remarkcount(), target);
  }

  // required float averageScore = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->averagescore(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookCityService.bookGradeInfo)
  return target;
}

size_t bookGradeInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:bookCityService.bookGradeInfo)
  size_t total_size = 0;

  if (has_remarkcount()) {
    // required int32 remarkCount = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->remarkcount());
  }

  if (has_averagescore()) {
    // required float averageScore = 2;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t bookGradeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookCityService.bookGradeInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 remarkCount = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->remarkcount());

    // required float averageScore = 2;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void bookGradeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookCityService.bookGradeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const bookGradeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const bookGradeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookCityService.bookGradeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookCityService.bookGradeInfo)
    MergeFrom(*source);
  }
}

void bookGradeInfo::MergeFrom(const bookGradeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookCityService.bookGradeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      remarkcount_ = from.remarkcount_;
    }
    if (cached_has_bits & 0x00000002u) {
      averagescore_ = from.averagescore_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void bookGradeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookCityService.bookGradeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void bookGradeInfo::CopyFrom(const bookGradeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookCityService.bookGradeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool bookGradeInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void bookGradeInfo::Swap(bookGradeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void bookGradeInfo::InternalSwap(bookGradeInfo* other) {
  using std::swap;
  swap(remarkcount_, other->remarkcount_);
  swap(averagescore_, other->averagescore_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata bookGradeInfo::GetMetadata() const {
  protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void boocomCombinekInfo::InitAsDefaultInstance() {
  ::bookCityService::_boocomCombinekInfo_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::bookCityService::bookBaseInfo*>(
      ::bookCityService::bookBaseInfo::internal_default_instance());
  ::bookCityService::_boocomCombinekInfo_default_instance_._instance.get_mutable()->downinfo_ = const_cast< ::bookCityService::bookDownInfo*>(
      ::bookCityService::bookDownInfo::internal_default_instance());
  ::bookCityService::_boocomCombinekInfo_default_instance_._instance.get_mutable()->gradeinfo_ = const_cast< ::bookCityService::bookGradeInfo*>(
      ::bookCityService::bookGradeInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int boocomCombinekInfo::kBookIdFieldNumber;
const int boocomCombinekInfo::kBaseInfoFieldNumber;
const int boocomCombinekInfo::kDownInfoFieldNumber;
const int boocomCombinekInfo::kGradeInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

boocomCombinekInfo::boocomCombinekInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bookcity_2eproto::scc_info_boocomCombinekInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookCityService.boocomCombinekInfo)
}
boocomCombinekInfo::boocomCombinekInfo(const boocomCombinekInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bookid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bookid()) {
    bookid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookid_);
  }
  if (from.has_baseinfo()) {
    baseinfo_ = new ::bookCityService::bookBaseInfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  if (from.has_downinfo()) {
    downinfo_ = new ::bookCityService::bookDownInfo(*from.downinfo_);
  } else {
    downinfo_ = NULL;
  }
  if (from.has_gradeinfo()) {
    gradeinfo_ = new ::bookCityService::bookGradeInfo(*from.gradeinfo_);
  } else {
    gradeinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:bookCityService.boocomCombinekInfo)
}

void boocomCombinekInfo::SharedCtor() {
  bookid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gradeinfo_) -
      reinterpret_cast<char*>(&baseinfo_)) + sizeof(gradeinfo_));
}

boocomCombinekInfo::~boocomCombinekInfo() {
  // @@protoc_insertion_point(destructor:bookCityService.boocomCombinekInfo)
  SharedDtor();
}

void boocomCombinekInfo::SharedDtor() {
  bookid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete baseinfo_;
  if (this != internal_default_instance()) delete downinfo_;
  if (this != internal_default_instance()) delete gradeinfo_;
}

void boocomCombinekInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* boocomCombinekInfo::descriptor() {
  ::protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const boocomCombinekInfo& boocomCombinekInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bookcity_2eproto::scc_info_boocomCombinekInfo.base);
  return *internal_default_instance();
}


void boocomCombinekInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:bookCityService.boocomCombinekInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      bookid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(baseinfo_ != NULL);
      baseinfo_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(downinfo_ != NULL);
      downinfo_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(gradeinfo_ != NULL);
      gradeinfo_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool boocomCombinekInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookCityService.boocomCombinekInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string bookId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bookid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bookid().data(), static_cast<int>(this->bookid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.boocomCombinekInfo.bookId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .bookCityService.bookBaseInfo baseInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .bookCityService.bookDownInfo downInfo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_downinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .bookCityService.bookGradeInfo gradeInfo = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gradeinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookCityService.boocomCombinekInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookCityService.boocomCombinekInfo)
  return false;
#undef DO_
}

void boocomCombinekInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookCityService.boocomCombinekInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string bookId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookid().data(), static_cast<int>(this->bookid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.boocomCombinekInfo.bookId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bookid(), output);
  }

  // required .bookCityService.bookBaseInfo baseInfo = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_baseinfo(), output);
  }

  // required .bookCityService.bookDownInfo downInfo = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_downinfo(), output);
  }

  // required .bookCityService.bookGradeInfo gradeInfo = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_gradeinfo(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bookCityService.boocomCombinekInfo)
}

::google::protobuf::uint8* boocomCombinekInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookCityService.boocomCombinekInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string bookId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookid().data(), static_cast<int>(this->bookid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.boocomCombinekInfo.bookId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bookid(), target);
  }

  // required .bookCityService.bookBaseInfo baseInfo = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_baseinfo(), deterministic, target);
  }

  // required .bookCityService.bookDownInfo downInfo = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_downinfo(), deterministic, target);
  }

  // required .bookCityService.bookGradeInfo gradeInfo = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_gradeinfo(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookCityService.boocomCombinekInfo)
  return target;
}

size_t boocomCombinekInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:bookCityService.boocomCombinekInfo)
  size_t total_size = 0;

  if (has_bookid()) {
    // required string bookId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bookid());
  }

  if (has_baseinfo()) {
    // required .bookCityService.bookBaseInfo baseInfo = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *baseinfo_);
  }

  if (has_downinfo()) {
    // required .bookCityService.bookDownInfo downInfo = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *downinfo_);
  }

  if (has_gradeinfo()) {
    // required .bookCityService.bookGradeInfo gradeInfo = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *gradeinfo_);
  }

  return total_size;
}
size_t boocomCombinekInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookCityService.boocomCombinekInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string bookId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bookid());

    // required .bookCityService.bookBaseInfo baseInfo = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *baseinfo_);

    // required .bookCityService.bookDownInfo downInfo = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *downinfo_);

    // required .bookCityService.bookGradeInfo gradeInfo = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *gradeinfo_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void boocomCombinekInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookCityService.boocomCombinekInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const boocomCombinekInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const boocomCombinekInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookCityService.boocomCombinekInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookCityService.boocomCombinekInfo)
    MergeFrom(*source);
  }
}

void boocomCombinekInfo::MergeFrom(const boocomCombinekInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookCityService.boocomCombinekInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_bookid();
      bookid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookid_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baseinfo()->::bookCityService::bookBaseInfo::MergeFrom(from.baseinfo());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_downinfo()->::bookCityService::bookDownInfo::MergeFrom(from.downinfo());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_gradeinfo()->::bookCityService::bookGradeInfo::MergeFrom(from.gradeinfo());
    }
  }
}

void boocomCombinekInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookCityService.boocomCombinekInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void boocomCombinekInfo::CopyFrom(const boocomCombinekInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookCityService.boocomCombinekInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool boocomCombinekInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  if (has_baseinfo()) {
    if (!this->baseinfo_->IsInitialized()) return false;
  }
  if (has_downinfo()) {
    if (!this->downinfo_->IsInitialized()) return false;
  }
  if (has_gradeinfo()) {
    if (!this->gradeinfo_->IsInitialized()) return false;
  }
  return true;
}

void boocomCombinekInfo::Swap(boocomCombinekInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void boocomCombinekInfo::InternalSwap(boocomCombinekInfo* other) {
  using std::swap;
  bookid_.Swap(&other->bookid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(baseinfo_, other->baseinfo_);
  swap(downinfo_, other->downinfo_);
  swap(gradeinfo_, other->gradeinfo_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata boocomCombinekInfo::GetMetadata() const {
  protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void bookMarkItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int bookMarkItem::kBookIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

bookMarkItem::bookMarkItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bookcity_2eproto::scc_info_bookMarkItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookCityService.bookMarkItem)
}
bookMarkItem::bookMarkItem(const bookMarkItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bookid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bookid()) {
    bookid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookid_);
  }
  // @@protoc_insertion_point(copy_constructor:bookCityService.bookMarkItem)
}

void bookMarkItem::SharedCtor() {
  bookid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bookMarkItem::~bookMarkItem() {
  // @@protoc_insertion_point(destructor:bookCityService.bookMarkItem)
  SharedDtor();
}

void bookMarkItem::SharedDtor() {
  bookid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void bookMarkItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* bookMarkItem::descriptor() {
  ::protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const bookMarkItem& bookMarkItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bookcity_2eproto::scc_info_bookMarkItem.base);
  return *internal_default_instance();
}


void bookMarkItem::Clear() {
// @@protoc_insertion_point(message_clear_start:bookCityService.bookMarkItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    bookid_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool bookMarkItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookCityService.bookMarkItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string bookId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bookid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bookid().data(), static_cast<int>(this->bookid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.bookMarkItem.bookId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookCityService.bookMarkItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookCityService.bookMarkItem)
  return false;
#undef DO_
}

void bookMarkItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookCityService.bookMarkItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string bookId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookid().data(), static_cast<int>(this->bookid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.bookMarkItem.bookId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bookid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bookCityService.bookMarkItem)
}

::google::protobuf::uint8* bookMarkItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookCityService.bookMarkItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string bookId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookid().data(), static_cast<int>(this->bookid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.bookMarkItem.bookId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bookid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookCityService.bookMarkItem)
  return target;
}

size_t bookMarkItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookCityService.bookMarkItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string bookId = 1;
  if (has_bookid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bookid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void bookMarkItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookCityService.bookMarkItem)
  GOOGLE_DCHECK_NE(&from, this);
  const bookMarkItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const bookMarkItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookCityService.bookMarkItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookCityService.bookMarkItem)
    MergeFrom(*source);
  }
}

void bookMarkItem::MergeFrom(const bookMarkItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookCityService.bookMarkItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bookid()) {
    set_has_bookid();
    bookid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookid_);
  }
}

void bookMarkItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookCityService.bookMarkItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void bookMarkItem::CopyFrom(const bookMarkItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookCityService.bookMarkItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool bookMarkItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void bookMarkItem::Swap(bookMarkItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void bookMarkItem::InternalSwap(bookMarkItem* other) {
  using std::swap;
  bookid_.Swap(&other->bookid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata bookMarkItem::GetMetadata() const {
  protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void getAllBookInfoReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int getAllBookInfoReq::kOffsetFieldNumber;
const int getAllBookInfoReq::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

getAllBookInfoReq::getAllBookInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bookcity_2eproto::scc_info_getAllBookInfoReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookCityService.getAllBookInfoReq)
}
getAllBookInfoReq::getAllBookInfoReq(const getAllBookInfoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:bookCityService.getAllBookInfoReq)
}

void getAllBookInfoReq::SharedCtor() {
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(size_));
}

getAllBookInfoReq::~getAllBookInfoReq() {
  // @@protoc_insertion_point(destructor:bookCityService.getAllBookInfoReq)
  SharedDtor();
}

void getAllBookInfoReq::SharedDtor() {
}

void getAllBookInfoReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* getAllBookInfoReq::descriptor() {
  ::protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const getAllBookInfoReq& getAllBookInfoReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bookcity_2eproto::scc_info_getAllBookInfoReq.base);
  return *internal_default_instance();
}


void getAllBookInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:bookCityService.getAllBookInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&offset_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&size_) -
        reinterpret_cast<char*>(&offset_)) + sizeof(size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool getAllBookInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookCityService.getAllBookInfoReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 offset = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookCityService.getAllBookInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookCityService.getAllBookInfoReq)
  return false;
#undef DO_
}

void getAllBookInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookCityService.getAllBookInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 offset = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->offset(), output);
  }

  // optional int32 size = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bookCityService.getAllBookInfoReq)
}

::google::protobuf::uint8* getAllBookInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookCityService.getAllBookInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 offset = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->offset(), target);
  }

  // optional int32 size = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookCityService.getAllBookInfoReq)
  return target;
}

size_t getAllBookInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookCityService.getAllBookInfoReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 offset = 1;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->offset());
    }

    // optional int32 size = 2;
    if (has_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->size());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getAllBookInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookCityService.getAllBookInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const getAllBookInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const getAllBookInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookCityService.getAllBookInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookCityService.getAllBookInfoReq)
    MergeFrom(*source);
  }
}

void getAllBookInfoReq::MergeFrom(const getAllBookInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookCityService.getAllBookInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000002u) {
      size_ = from.size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void getAllBookInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookCityService.getAllBookInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getAllBookInfoReq::CopyFrom(const getAllBookInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookCityService.getAllBookInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getAllBookInfoReq::IsInitialized() const {
  return true;
}

void getAllBookInfoReq::Swap(getAllBookInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void getAllBookInfoReq::InternalSwap(getAllBookInfoReq* other) {
  using std::swap;
  swap(offset_, other->offset_);
  swap(size_, other->size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata getAllBookInfoReq::GetMetadata() const {
  protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void searchBookReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int searchBookReq::kUserIdFieldNumber;
const int searchBookReq::kBookIdFieldNumber;
const int searchBookReq::kBookNameFieldNumber;
const int searchBookReq::kAuthorNameFieldNumber;
const int searchBookReq::kBookTypeFieldNumber;
const int searchBookReq::kPublishHouseFieldNumber;
const int searchBookReq::kDayTimeFieldNumber;
const int searchBookReq::kOffsetFieldNumber;
const int searchBookReq::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

searchBookReq::searchBookReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bookcity_2eproto::scc_info_searchBookReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookCityService.searchBookReq)
}
searchBookReq::searchBookReq(const searchBookReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bookid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bookid()) {
    bookid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookid_);
  }
  bookname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bookname()) {
    bookname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookname_);
  }
  authorname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_authorname()) {
    authorname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authorname_);
  }
  publishhouse_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_publishhouse()) {
    publishhouse_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publishhouse_);
  }
  daytime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_daytime()) {
    daytime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.daytime_);
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:bookCityService.searchBookReq)
}

void searchBookReq::SharedCtor() {
  bookid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bookname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authorname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publishhouse_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  daytime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(count_));
}

searchBookReq::~searchBookReq() {
  // @@protoc_insertion_point(destructor:bookCityService.searchBookReq)
  SharedDtor();
}

void searchBookReq::SharedDtor() {
  bookid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bookname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authorname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publishhouse_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  daytime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void searchBookReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* searchBookReq::descriptor() {
  ::protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const searchBookReq& searchBookReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bookcity_2eproto::scc_info_searchBookReq.base);
  return *internal_default_instance();
}


void searchBookReq::Clear() {
// @@protoc_insertion_point(message_clear_start:bookCityService.searchBookReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      bookid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      bookname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      authorname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      publishhouse_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      daytime_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 224u) {
    ::memset(&userid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&offset_) -
        reinterpret_cast<char*>(&userid_)) + sizeof(offset_));
  }
  count_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool searchBookReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookCityService.searchBookReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bookId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bookid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bookid().data(), static_cast<int>(this->bookid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.searchBookReq.bookId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bookName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bookname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bookname().data(), static_cast<int>(this->bookname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.searchBookReq.bookName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string authorName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authorname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->authorname().data(), static_cast<int>(this->authorname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.searchBookReq.authorName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 bookType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_booktype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &booktype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string publishHouse = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_publishhouse()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->publishhouse().data(), static_cast<int>(this->publishhouse().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.searchBookReq.publishHouse");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string dayTime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_daytime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->daytime().data(), static_cast<int>(this->daytime().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.searchBookReq.dayTime");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 offset = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 count = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookCityService.searchBookReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookCityService.searchBookReq)
  return false;
#undef DO_
}

void searchBookReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookCityService.searchBookReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userId = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional string bookId = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookid().data(), static_cast<int>(this->bookid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.searchBookReq.bookId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->bookid(), output);
  }

  // optional string bookName = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookname().data(), static_cast<int>(this->bookname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.searchBookReq.bookName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->bookname(), output);
  }

  // optional string authorName = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authorname().data(), static_cast<int>(this->authorname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.searchBookReq.authorName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->authorname(), output);
  }

  // optional int32 bookType = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->booktype(), output);
  }

  // optional string publishHouse = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->publishhouse().data(), static_cast<int>(this->publishhouse().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.searchBookReq.publishHouse");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->publishhouse(), output);
  }

  // required string dayTime = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->daytime().data(), static_cast<int>(this->daytime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.searchBookReq.dayTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->daytime(), output);
  }

  // required int32 offset = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->offset(), output);
  }

  // required int32 count = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bookCityService.searchBookReq)
}

::google::protobuf::uint8* searchBookReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookCityService.searchBookReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userId = 1;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional string bookId = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookid().data(), static_cast<int>(this->bookid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.searchBookReq.bookId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bookid(), target);
  }

  // optional string bookName = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookname().data(), static_cast<int>(this->bookname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.searchBookReq.bookName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->bookname(), target);
  }

  // optional string authorName = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authorname().data(), static_cast<int>(this->authorname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.searchBookReq.authorName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->authorname(), target);
  }

  // optional int32 bookType = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->booktype(), target);
  }

  // optional string publishHouse = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->publishhouse().data(), static_cast<int>(this->publishhouse().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.searchBookReq.publishHouse");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->publishhouse(), target);
  }

  // required string dayTime = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->daytime().data(), static_cast<int>(this->daytime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.searchBookReq.dayTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->daytime(), target);
  }

  // required int32 offset = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->offset(), target);
  }

  // required int32 count = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookCityService.searchBookReq)
  return target;
}

size_t searchBookReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:bookCityService.searchBookReq)
  size_t total_size = 0;

  if (has_daytime()) {
    // required string dayTime = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->daytime());
  }

  if (has_offset()) {
    // required int32 offset = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->offset());
  }

  if (has_count()) {
    // required int32 count = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  return total_size;
}
size_t searchBookReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookCityService.searchBookReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000190) ^ 0x00000190) == 0) {  // All required fields are present.
    // required string dayTime = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->daytime());

    // required int32 offset = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->offset());

    // required int32 count = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string bookId = 2;
    if (has_bookid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bookid());
    }

    // optional string bookName = 3;
    if (has_bookname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bookname());
    }

    // optional string authorName = 4;
    if (has_authorname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->authorname());
    }

    // optional string publishHouse = 6;
    if (has_publishhouse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->publishhouse());
    }

  }
  if (_has_bits_[0 / 32] & 96u) {
    // optional int32 userId = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional int32 bookType = 5;
    if (has_booktype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->booktype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void searchBookReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookCityService.searchBookReq)
  GOOGLE_DCHECK_NE(&from, this);
  const searchBookReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const searchBookReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookCityService.searchBookReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookCityService.searchBookReq)
    MergeFrom(*source);
  }
}

void searchBookReq::MergeFrom(const searchBookReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookCityService.searchBookReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_bookid();
      bookid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_bookname();
      bookname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookname_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_authorname();
      authorname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authorname_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_publishhouse();
      publishhouse_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publishhouse_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_daytime();
      daytime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.daytime_);
    }
    if (cached_has_bits & 0x00000020u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000040u) {
      booktype_ = from.booktype_;
    }
    if (cached_has_bits & 0x00000080u) {
      offset_ = from.offset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_count(from.count());
  }
}

void searchBookReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookCityService.searchBookReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void searchBookReq::CopyFrom(const searchBookReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookCityService.searchBookReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool searchBookReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000190) != 0x00000190) return false;
  return true;
}

void searchBookReq::Swap(searchBookReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void searchBookReq::InternalSwap(searchBookReq* other) {
  using std::swap;
  bookid_.Swap(&other->bookid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bookname_.Swap(&other->bookname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  authorname_.Swap(&other->authorname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  publishhouse_.Swap(&other->publishhouse_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  daytime_.Swap(&other->daytime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  swap(booktype_, other->booktype_);
  swap(offset_, other->offset_);
  swap(count_, other->count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata searchBookReq::GetMetadata() const {
  protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void booksRespList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int booksRespList::kUserIdFieldNumber;
const int booksRespList::kListsFieldNumber;
const int booksRespList::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

booksRespList::booksRespList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bookcity_2eproto::scc_info_booksRespList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookCityService.booksRespList)
}
booksRespList::booksRespList(const booksRespList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      lists_(from.lists_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_userid()) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:bookCityService.booksRespList)
}

void booksRespList::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  count_ = 0;
}

booksRespList::~booksRespList() {
  // @@protoc_insertion_point(destructor:bookCityService.booksRespList)
  SharedDtor();
}

void booksRespList::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void booksRespList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* booksRespList::descriptor() {
  ::protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const booksRespList& booksRespList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bookcity_2eproto::scc_info_booksRespList.base);
  return *internal_default_instance();
}


void booksRespList::Clear() {
// @@protoc_insertion_point(message_clear_start:bookCityService.booksRespList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lists_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    userid_.ClearNonDefaultToEmptyNoArena();
  }
  count_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool booksRespList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookCityService.booksRespList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string userId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.booksRespList.userId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bookCityService.boocomCombinekInfo lists = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lists()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookCityService.booksRespList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookCityService.booksRespList)
  return false;
#undef DO_
}

void booksRespList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookCityService.booksRespList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string userId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.booksRespList.userId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  // repeated .bookCityService.boocomCombinekInfo lists = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lists_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->lists(static_cast<int>(i)),
      output);
  }

  // required int32 count = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bookCityService.booksRespList)
}

::google::protobuf::uint8* booksRespList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookCityService.booksRespList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string userId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.booksRespList.userId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  // repeated .bookCityService.boocomCombinekInfo lists = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lists_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->lists(static_cast<int>(i)), deterministic, target);
  }

  // required int32 count = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookCityService.booksRespList)
  return target;
}

size_t booksRespList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookCityService.booksRespList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 count = 3;
  if (has_count()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }
  // repeated .bookCityService.boocomCombinekInfo lists = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->lists_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lists(static_cast<int>(i)));
    }
  }

  // optional string userId = 1;
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void booksRespList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookCityService.booksRespList)
  GOOGLE_DCHECK_NE(&from, this);
  const booksRespList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const booksRespList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookCityService.booksRespList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookCityService.booksRespList)
    MergeFrom(*source);
  }
}

void booksRespList::MergeFrom(const booksRespList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookCityService.booksRespList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lists_.MergeFrom(from.lists_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_userid();
      userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
    }
    if (cached_has_bits & 0x00000002u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void booksRespList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookCityService.booksRespList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void booksRespList::CopyFrom(const booksRespList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookCityService.booksRespList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool booksRespList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->lists())) return false;
  return true;
}

void booksRespList::Swap(booksRespList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void booksRespList::InternalSwap(booksRespList* other) {
  using std::swap;
  CastToBase(&lists_)->InternalSwap(CastToBase(&other->lists_));
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(count_, other->count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata booksRespList::GetMetadata() const {
  protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void getBookTypeReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int getBookTypeReq::kUserIdFieldNumber;
const int getBookTypeReq::kTypeFieldNumber;
const int getBookTypeReq::kOffsetFieldNumber;
const int getBookTypeReq::kCountFieldNumber;
const int getBookTypeReq::kSortMethodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

getBookTypeReq::getBookTypeReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bookcity_2eproto::scc_info_getBookTypeReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookCityService.getBookTypeReq)
}
getBookTypeReq::getBookTypeReq(const getBookTypeReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_userid()) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_type()) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&sortmethod_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(sortmethod_));
  // @@protoc_insertion_point(copy_constructor:bookCityService.getBookTypeReq)
}

void getBookTypeReq::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sortmethod_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(sortmethod_));
}

getBookTypeReq::~getBookTypeReq() {
  // @@protoc_insertion_point(destructor:bookCityService.getBookTypeReq)
  SharedDtor();
}

void getBookTypeReq::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void getBookTypeReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* getBookTypeReq::descriptor() {
  ::protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const getBookTypeReq& getBookTypeReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bookcity_2eproto::scc_info_getBookTypeReq.base);
  return *internal_default_instance();
}


void getBookTypeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:bookCityService.getBookTypeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      userid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      type_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&offset_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&sortmethod_) -
        reinterpret_cast<char*>(&offset_)) + sizeof(sortmethod_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool getBookTypeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookCityService.getBookTypeReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string userId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.getBookTypeReq.userId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.getBookTypeReq.type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sortMethod = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_sortmethod();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sortmethod_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookCityService.getBookTypeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookCityService.getBookTypeReq)
  return false;
#undef DO_
}

void getBookTypeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookCityService.getBookTypeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string userId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.getBookTypeReq.userId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  // required string type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.getBookTypeReq.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  // optional int32 offset = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->offset(), output);
  }

  // required int32 count = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->count(), output);
  }

  // optional int32 sortMethod = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->sortmethod(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bookCityService.getBookTypeReq)
}

::google::protobuf::uint8* getBookTypeReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookCityService.getBookTypeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string userId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.getBookTypeReq.userId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  // required string type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.getBookTypeReq.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // optional int32 offset = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->offset(), target);
  }

  // required int32 count = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->count(), target);
  }

  // optional int32 sortMethod = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->sortmethod(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookCityService.getBookTypeReq)
  return target;
}

size_t getBookTypeReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:bookCityService.getBookTypeReq)
  size_t total_size = 0;

  if (has_type()) {
    // required string type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  if (has_count()) {
    // required int32 count = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  return total_size;
}
size_t getBookTypeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookCityService.getBookTypeReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000a) ^ 0x0000000a) == 0) {  // All required fields are present.
    // required string type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());

    // required int32 count = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string userId = 1;
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // optional int32 offset = 3;
  if (has_offset()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->offset());
  }

  // optional int32 sortMethod = 5;
  if (has_sortmethod()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sortmethod());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getBookTypeReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookCityService.getBookTypeReq)
  GOOGLE_DCHECK_NE(&from, this);
  const getBookTypeReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const getBookTypeReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookCityService.getBookTypeReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookCityService.getBookTypeReq)
    MergeFrom(*source);
  }
}

void getBookTypeReq::MergeFrom(const getBookTypeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookCityService.getBookTypeReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_userid();
      userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (cached_has_bits & 0x00000004u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000008u) {
      count_ = from.count_;
    }
    if (cached_has_bits & 0x00000010u) {
      sortmethod_ = from.sortmethod_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void getBookTypeReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookCityService.getBookTypeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getBookTypeReq::CopyFrom(const getBookTypeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookCityService.getBookTypeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getBookTypeReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000a) != 0x0000000a) return false;
  return true;
}

void getBookTypeReq::Swap(getBookTypeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void getBookTypeReq::InternalSwap(getBookTypeReq* other) {
  using std::swap;
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(offset_, other->offset_);
  swap(count_, other->count_);
  swap(sortmethod_, other->sortmethod_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata getBookTypeReq::GetMetadata() const {
  protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void delBookReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int delBookReq::kUserIdFieldNumber;
const int delBookReq::kBookIdFieldNumber;
const int delBookReq::kDelTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

delBookReq::delBookReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bookcity_2eproto::scc_info_delBookReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookCityService.delBookReq)
}
delBookReq::delBookReq(const delBookReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_userid()) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  bookid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bookid()) {
    bookid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookid_);
  }
  deltime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_deltime()) {
    deltime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deltime_);
  }
  // @@protoc_insertion_point(copy_constructor:bookCityService.delBookReq)
}

void delBookReq::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bookid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deltime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

delBookReq::~delBookReq() {
  // @@protoc_insertion_point(destructor:bookCityService.delBookReq)
  SharedDtor();
}

void delBookReq::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bookid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deltime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void delBookReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* delBookReq::descriptor() {
  ::protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const delBookReq& delBookReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bookcity_2eproto::scc_info_delBookReq.base);
  return *internal_default_instance();
}


void delBookReq::Clear() {
// @@protoc_insertion_point(message_clear_start:bookCityService.delBookReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      userid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      bookid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      deltime_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool delBookReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookCityService.delBookReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string userId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.delBookReq.userId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string bookId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bookid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bookid().data(), static_cast<int>(this->bookid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.delBookReq.bookId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string delTime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deltime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->deltime().data(), static_cast<int>(this->deltime().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.delBookReq.delTime");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookCityService.delBookReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookCityService.delBookReq)
  return false;
#undef DO_
}

void delBookReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookCityService.delBookReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string userId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.delBookReq.userId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  // required string bookId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookid().data(), static_cast<int>(this->bookid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.delBookReq.bookId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->bookid(), output);
  }

  // optional string delTime = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->deltime().data(), static_cast<int>(this->deltime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.delBookReq.delTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->deltime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bookCityService.delBookReq)
}

::google::protobuf::uint8* delBookReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookCityService.delBookReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string userId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.delBookReq.userId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  // required string bookId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookid().data(), static_cast<int>(this->bookid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.delBookReq.bookId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bookid(), target);
  }

  // optional string delTime = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->deltime().data(), static_cast<int>(this->deltime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.delBookReq.delTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->deltime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookCityService.delBookReq)
  return target;
}

size_t delBookReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:bookCityService.delBookReq)
  size_t total_size = 0;

  if (has_userid()) {
    // required string userId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  if (has_bookid()) {
    // required string bookId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bookid());
  }

  return total_size;
}
size_t delBookReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookCityService.delBookReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string userId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());

    // required string bookId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bookid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string delTime = 3;
  if (has_deltime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deltime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void delBookReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookCityService.delBookReq)
  GOOGLE_DCHECK_NE(&from, this);
  const delBookReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const delBookReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookCityService.delBookReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookCityService.delBookReq)
    MergeFrom(*source);
  }
}

void delBookReq::MergeFrom(const delBookReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookCityService.delBookReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_userid();
      userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_bookid();
      bookid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_deltime();
      deltime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deltime_);
    }
  }
}

void delBookReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookCityService.delBookReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void delBookReq::CopyFrom(const delBookReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookCityService.delBookReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool delBookReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void delBookReq::Swap(delBookReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void delBookReq::InternalSwap(delBookReq* other) {
  using std::swap;
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bookid_.Swap(&other->bookid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  deltime_.Swap(&other->deltime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata delBookReq::GetMetadata() const {
  protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void adsReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int adsReq::kBookIdFieldNumber;
const int adsReq::kAdUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

adsReq::adsReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bookcity_2eproto::scc_info_adsReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookCityService.adsReq)
}
adsReq::adsReq(const adsReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bookid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bookid()) {
    bookid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookid_);
  }
  adurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_adurl()) {
    adurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.adurl_);
  }
  // @@protoc_insertion_point(copy_constructor:bookCityService.adsReq)
}

void adsReq::SharedCtor() {
  bookid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  adurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

adsReq::~adsReq() {
  // @@protoc_insertion_point(destructor:bookCityService.adsReq)
  SharedDtor();
}

void adsReq::SharedDtor() {
  bookid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  adurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void adsReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* adsReq::descriptor() {
  ::protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const adsReq& adsReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bookcity_2eproto::scc_info_adsReq.base);
  return *internal_default_instance();
}


void adsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:bookCityService.adsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      bookid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      adurl_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool adsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookCityService.adsReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string bookId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bookid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bookid().data(), static_cast<int>(this->bookid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.adsReq.bookId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string adUrl = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_adurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->adurl().data(), static_cast<int>(this->adurl().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.adsReq.adUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookCityService.adsReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookCityService.adsReq)
  return false;
#undef DO_
}

void adsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookCityService.adsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string bookId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookid().data(), static_cast<int>(this->bookid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.adsReq.bookId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bookid(), output);
  }

  // optional string adUrl = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->adurl().data(), static_cast<int>(this->adurl().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.adsReq.adUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->adurl(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bookCityService.adsReq)
}

::google::protobuf::uint8* adsReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookCityService.adsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string bookId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookid().data(), static_cast<int>(this->bookid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.adsReq.bookId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bookid(), target);
  }

  // optional string adUrl = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->adurl().data(), static_cast<int>(this->adurl().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.adsReq.adUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->adurl(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookCityService.adsReq)
  return target;
}

size_t adsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookCityService.adsReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string bookId = 1;
    if (has_bookid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bookid());
    }

    // optional string adUrl = 2;
    if (has_adurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->adurl());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void adsReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookCityService.adsReq)
  GOOGLE_DCHECK_NE(&from, this);
  const adsReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const adsReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookCityService.adsReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookCityService.adsReq)
    MergeFrom(*source);
  }
}

void adsReq::MergeFrom(const adsReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookCityService.adsReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_bookid();
      bookid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_adurl();
      adurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.adurl_);
    }
  }
}

void adsReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookCityService.adsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void adsReq::CopyFrom(const adsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookCityService.adsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool adsReq::IsInitialized() const {
  return true;
}

void adsReq::Swap(adsReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void adsReq::InternalSwap(adsReq* other) {
  using std::swap;
  bookid_.Swap(&other->bookid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  adurl_.Swap(&other->adurl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata adsReq::GetMetadata() const {
  protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void adInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int adInfo::kAdUrlFieldNumber;
const int adInfo::kListsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

adInfo::adInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bookcity_2eproto::scc_info_adInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookCityService.adInfo)
}
adInfo::adInfo(const adInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      lists_(from.lists_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  adurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_adurl()) {
    adurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.adurl_);
  }
  // @@protoc_insertion_point(copy_constructor:bookCityService.adInfo)
}

void adInfo::SharedCtor() {
  adurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

adInfo::~adInfo() {
  // @@protoc_insertion_point(destructor:bookCityService.adInfo)
  SharedDtor();
}

void adInfo::SharedDtor() {
  adurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void adInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* adInfo::descriptor() {
  ::protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const adInfo& adInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bookcity_2eproto::scc_info_adInfo.base);
  return *internal_default_instance();
}


void adInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:bookCityService.adInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lists_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    adurl_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool adInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookCityService.adInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string adUrl = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_adurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->adurl().data(), static_cast<int>(this->adurl().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.adInfo.adUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bookCityService.boocomCombinekInfo lists = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lists()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookCityService.adInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookCityService.adInfo)
  return false;
#undef DO_
}

void adInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookCityService.adInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string adUrl = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->adurl().data(), static_cast<int>(this->adurl().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.adInfo.adUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->adurl(), output);
  }

  // repeated .bookCityService.boocomCombinekInfo lists = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lists_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->lists(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bookCityService.adInfo)
}

::google::protobuf::uint8* adInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookCityService.adInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string adUrl = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->adurl().data(), static_cast<int>(this->adurl().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.adInfo.adUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->adurl(), target);
  }

  // repeated .bookCityService.boocomCombinekInfo lists = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lists_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->lists(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookCityService.adInfo)
  return target;
}

size_t adInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookCityService.adInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .bookCityService.boocomCombinekInfo lists = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->lists_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lists(static_cast<int>(i)));
    }
  }

  // optional string adUrl = 1;
  if (has_adurl()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->adurl());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void adInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookCityService.adInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const adInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const adInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookCityService.adInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookCityService.adInfo)
    MergeFrom(*source);
  }
}

void adInfo::MergeFrom(const adInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookCityService.adInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lists_.MergeFrom(from.lists_);
  if (from.has_adurl()) {
    set_has_adurl();
    adurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.adurl_);
  }
}

void adInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookCityService.adInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void adInfo::CopyFrom(const adInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookCityService.adInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool adInfo::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->lists())) return false;
  return true;
}

void adInfo::Swap(adInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void adInfo::InternalSwap(adInfo* other) {
  using std::swap;
  CastToBase(&lists_)->InternalSwap(CastToBase(&other->lists_));
  adurl_.Swap(&other->adurl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata adInfo::GetMetadata() const {
  protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void adsRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int adsRes::kListsFieldNumber;
const int adsRes::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

adsRes::adsRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bookcity_2eproto::scc_info_adsRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookCityService.adsRes)
}
adsRes::adsRes(const adsRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      lists_(from.lists_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:bookCityService.adsRes)
}

void adsRes::SharedCtor() {
  count_ = 0;
}

adsRes::~adsRes() {
  // @@protoc_insertion_point(destructor:bookCityService.adsRes)
  SharedDtor();
}

void adsRes::SharedDtor() {
}

void adsRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* adsRes::descriptor() {
  ::protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const adsRes& adsRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bookcity_2eproto::scc_info_adsRes.base);
  return *internal_default_instance();
}


void adsRes::Clear() {
// @@protoc_insertion_point(message_clear_start:bookCityService.adsRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lists_.Clear();
  count_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool adsRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookCityService.adsRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .bookCityService.adInfo lists = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lists()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookCityService.adsRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookCityService.adsRes)
  return false;
#undef DO_
}

void adsRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookCityService.adsRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bookCityService.adInfo lists = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lists_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->lists(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 count = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bookCityService.adsRes)
}

::google::protobuf::uint8* adsRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookCityService.adsRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bookCityService.adInfo lists = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lists_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->lists(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 count = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookCityService.adsRes)
  return target;
}

size_t adsRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookCityService.adsRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 count = 2;
  if (has_count()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }
  // repeated .bookCityService.adInfo lists = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->lists_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lists(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void adsRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookCityService.adsRes)
  GOOGLE_DCHECK_NE(&from, this);
  const adsRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const adsRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookCityService.adsRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookCityService.adsRes)
    MergeFrom(*source);
  }
}

void adsRes::MergeFrom(const adsRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookCityService.adsRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lists_.MergeFrom(from.lists_);
  if (from.has_count()) {
    set_count(from.count());
  }
}

void adsRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookCityService.adsRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void adsRes::CopyFrom(const adsRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookCityService.adsRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool adsRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->lists())) return false;
  return true;
}

void adsRes::Swap(adsRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void adsRes::InternalSwap(adsRes* other) {
  using std::swap;
  CastToBase(&lists_)->InternalSwap(CastToBase(&other->lists_));
  swap(count_, other->count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata adsRes::GetMetadata() const {
  protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void recommendBookReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int recommendBookReq::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

recommendBookReq::recommendBookReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bookcity_2eproto::scc_info_recommendBookReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookCityService.recommendBookReq)
}
recommendBookReq::recommendBookReq(const recommendBookReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:bookCityService.recommendBookReq)
}

void recommendBookReq::SharedCtor() {
  userid_ = 0;
}

recommendBookReq::~recommendBookReq() {
  // @@protoc_insertion_point(destructor:bookCityService.recommendBookReq)
  SharedDtor();
}

void recommendBookReq::SharedDtor() {
}

void recommendBookReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* recommendBookReq::descriptor() {
  ::protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const recommendBookReq& recommendBookReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bookcity_2eproto::scc_info_recommendBookReq.base);
  return *internal_default_instance();
}


void recommendBookReq::Clear() {
// @@protoc_insertion_point(message_clear_start:bookCityService.recommendBookReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool recommendBookReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookCityService.recommendBookReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 userId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookCityService.recommendBookReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookCityService.recommendBookReq)
  return false;
#undef DO_
}

void recommendBookReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookCityService.recommendBookReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 userId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bookCityService.recommendBookReq)
}

::google::protobuf::uint8* recommendBookReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookCityService.recommendBookReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 userId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookCityService.recommendBookReq)
  return target;
}

size_t recommendBookReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookCityService.recommendBookReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 userId = 1;
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void recommendBookReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookCityService.recommendBookReq)
  GOOGLE_DCHECK_NE(&from, this);
  const recommendBookReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const recommendBookReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookCityService.recommendBookReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookCityService.recommendBookReq)
    MergeFrom(*source);
  }
}

void recommendBookReq::MergeFrom(const recommendBookReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookCityService.recommendBookReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_userid()) {
    set_userid(from.userid());
  }
}

void recommendBookReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookCityService.recommendBookReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void recommendBookReq::CopyFrom(const recommendBookReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookCityService.recommendBookReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool recommendBookReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void recommendBookReq::Swap(recommendBookReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void recommendBookReq::InternalSwap(recommendBookReq* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata recommendBookReq::GetMetadata() const {
  protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void recommendBookRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int recommendBookRes::kListsFieldNumber;
const int recommendBookRes::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

recommendBookRes::recommendBookRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bookcity_2eproto::scc_info_recommendBookRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookCityService.recommendBookRes)
}
recommendBookRes::recommendBookRes(const recommendBookRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      lists_(from.lists_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:bookCityService.recommendBookRes)
}

void recommendBookRes::SharedCtor() {
  count_ = 0;
}

recommendBookRes::~recommendBookRes() {
  // @@protoc_insertion_point(destructor:bookCityService.recommendBookRes)
  SharedDtor();
}

void recommendBookRes::SharedDtor() {
}

void recommendBookRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* recommendBookRes::descriptor() {
  ::protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const recommendBookRes& recommendBookRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bookcity_2eproto::scc_info_recommendBookRes.base);
  return *internal_default_instance();
}


void recommendBookRes::Clear() {
// @@protoc_insertion_point(message_clear_start:bookCityService.recommendBookRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lists_.Clear();
  count_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool recommendBookRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookCityService.recommendBookRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .bookCityService.boocomCombinekInfo lists = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lists()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookCityService.recommendBookRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookCityService.recommendBookRes)
  return false;
#undef DO_
}

void recommendBookRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookCityService.recommendBookRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bookCityService.boocomCombinekInfo lists = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lists_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->lists(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 count = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bookCityService.recommendBookRes)
}

::google::protobuf::uint8* recommendBookRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookCityService.recommendBookRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bookCityService.boocomCombinekInfo lists = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lists_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->lists(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 count = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookCityService.recommendBookRes)
  return target;
}

size_t recommendBookRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookCityService.recommendBookRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 count = 2;
  if (has_count()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }
  // repeated .bookCityService.boocomCombinekInfo lists = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->lists_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lists(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void recommendBookRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookCityService.recommendBookRes)
  GOOGLE_DCHECK_NE(&from, this);
  const recommendBookRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const recommendBookRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookCityService.recommendBookRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookCityService.recommendBookRes)
    MergeFrom(*source);
  }
}

void recommendBookRes::MergeFrom(const recommendBookRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookCityService.recommendBookRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lists_.MergeFrom(from.lists_);
  if (from.has_count()) {
    set_count(from.count());
  }
}

void recommendBookRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookCityService.recommendBookRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void recommendBookRes::CopyFrom(const recommendBookRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookCityService.recommendBookRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool recommendBookRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->lists())) return false;
  return true;
}

void recommendBookRes::Swap(recommendBookRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void recommendBookRes::InternalSwap(recommendBookRes* other) {
  using std::swap;
  CastToBase(&lists_)->InternalSwap(CastToBase(&other->lists_));
  swap(count_, other->count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata recommendBookRes::GetMetadata() const {
  protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void browseBookReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int browseBookReq::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

browseBookReq::browseBookReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bookcity_2eproto::scc_info_browseBookReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookCityService.browseBookReq)
}
browseBookReq::browseBookReq(const browseBookReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:bookCityService.browseBookReq)
}

void browseBookReq::SharedCtor() {
  userid_ = 0;
}

browseBookReq::~browseBookReq() {
  // @@protoc_insertion_point(destructor:bookCityService.browseBookReq)
  SharedDtor();
}

void browseBookReq::SharedDtor() {
}

void browseBookReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* browseBookReq::descriptor() {
  ::protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const browseBookReq& browseBookReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bookcity_2eproto::scc_info_browseBookReq.base);
  return *internal_default_instance();
}


void browseBookReq::Clear() {
// @@protoc_insertion_point(message_clear_start:bookCityService.browseBookReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool browseBookReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookCityService.browseBookReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 userId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookCityService.browseBookReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookCityService.browseBookReq)
  return false;
#undef DO_
}

void browseBookReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookCityService.browseBookReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 userId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bookCityService.browseBookReq)
}

::google::protobuf::uint8* browseBookReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookCityService.browseBookReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 userId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookCityService.browseBookReq)
  return target;
}

size_t browseBookReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookCityService.browseBookReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 userId = 1;
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void browseBookReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookCityService.browseBookReq)
  GOOGLE_DCHECK_NE(&from, this);
  const browseBookReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const browseBookReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookCityService.browseBookReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookCityService.browseBookReq)
    MergeFrom(*source);
  }
}

void browseBookReq::MergeFrom(const browseBookReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookCityService.browseBookReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_userid()) {
    set_userid(from.userid());
  }
}

void browseBookReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookCityService.browseBookReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void browseBookReq::CopyFrom(const browseBookReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookCityService.browseBookReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool browseBookReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void browseBookReq::Swap(browseBookReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void browseBookReq::InternalSwap(browseBookReq* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata browseBookReq::GetMetadata() const {
  protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void browseBookRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int browseBookRes::kListsFieldNumber;
const int browseBookRes::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

browseBookRes::browseBookRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bookcity_2eproto::scc_info_browseBookRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookCityService.browseBookRes)
}
browseBookRes::browseBookRes(const browseBookRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      lists_(from.lists_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:bookCityService.browseBookRes)
}

void browseBookRes::SharedCtor() {
  count_ = 0;
}

browseBookRes::~browseBookRes() {
  // @@protoc_insertion_point(destructor:bookCityService.browseBookRes)
  SharedDtor();
}

void browseBookRes::SharedDtor() {
}

void browseBookRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* browseBookRes::descriptor() {
  ::protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const browseBookRes& browseBookRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bookcity_2eproto::scc_info_browseBookRes.base);
  return *internal_default_instance();
}


void browseBookRes::Clear() {
// @@protoc_insertion_point(message_clear_start:bookCityService.browseBookRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lists_.Clear();
  count_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool browseBookRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookCityService.browseBookRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .bookCityService.boocomCombinekInfo lists = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lists()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookCityService.browseBookRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookCityService.browseBookRes)
  return false;
#undef DO_
}

void browseBookRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookCityService.browseBookRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bookCityService.boocomCombinekInfo lists = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lists_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->lists(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 count = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bookCityService.browseBookRes)
}

::google::protobuf::uint8* browseBookRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookCityService.browseBookRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bookCityService.boocomCombinekInfo lists = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lists_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->lists(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 count = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookCityService.browseBookRes)
  return target;
}

size_t browseBookRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookCityService.browseBookRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 count = 2;
  if (has_count()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }
  // repeated .bookCityService.boocomCombinekInfo lists = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->lists_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lists(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void browseBookRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookCityService.browseBookRes)
  GOOGLE_DCHECK_NE(&from, this);
  const browseBookRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const browseBookRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookCityService.browseBookRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookCityService.browseBookRes)
    MergeFrom(*source);
  }
}

void browseBookRes::MergeFrom(const browseBookRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookCityService.browseBookRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lists_.MergeFrom(from.lists_);
  if (from.has_count()) {
    set_count(from.count());
  }
}

void browseBookRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookCityService.browseBookRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void browseBookRes::CopyFrom(const browseBookRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookCityService.browseBookRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool browseBookRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->lists())) return false;
  return true;
}

void browseBookRes::Swap(browseBookRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void browseBookRes::InternalSwap(browseBookRes* other) {
  using std::swap;
  CastToBase(&lists_)->InternalSwap(CastToBase(&other->lists_));
  swap(count_, other->count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata browseBookRes::GetMetadata() const {
  protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void universalBlankReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int universalBlankReq::kDayTimeFieldNumber;
const int universalBlankReq::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

universalBlankReq::universalBlankReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bookcity_2eproto::scc_info_universalBlankReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookCityService.universalBlankReq)
}
universalBlankReq::universalBlankReq(const universalBlankReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  daytime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_daytime()) {
    daytime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.daytime_);
  }
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:bookCityService.universalBlankReq)
}

void universalBlankReq::SharedCtor() {
  daytime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  count_ = 0;
}

universalBlankReq::~universalBlankReq() {
  // @@protoc_insertion_point(destructor:bookCityService.universalBlankReq)
  SharedDtor();
}

void universalBlankReq::SharedDtor() {
  daytime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void universalBlankReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* universalBlankReq::descriptor() {
  ::protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const universalBlankReq& universalBlankReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bookcity_2eproto::scc_info_universalBlankReq.base);
  return *internal_default_instance();
}


void universalBlankReq::Clear() {
// @@protoc_insertion_point(message_clear_start:bookCityService.universalBlankReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    daytime_.ClearNonDefaultToEmptyNoArena();
  }
  count_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool universalBlankReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookCityService.universalBlankReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string dayTime = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_daytime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->daytime().data(), static_cast<int>(this->daytime().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.universalBlankReq.dayTime");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookCityService.universalBlankReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookCityService.universalBlankReq)
  return false;
#undef DO_
}

void universalBlankReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookCityService.universalBlankReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string dayTime = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->daytime().data(), static_cast<int>(this->daytime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.universalBlankReq.dayTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->daytime(), output);
  }

  // optional int32 count = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bookCityService.universalBlankReq)
}

::google::protobuf::uint8* universalBlankReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookCityService.universalBlankReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string dayTime = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->daytime().data(), static_cast<int>(this->daytime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.universalBlankReq.dayTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->daytime(), target);
  }

  // optional int32 count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookCityService.universalBlankReq)
  return target;
}

size_t universalBlankReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookCityService.universalBlankReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string dayTime = 1;
    if (has_daytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->daytime());
    }

    // optional int32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void universalBlankReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookCityService.universalBlankReq)
  GOOGLE_DCHECK_NE(&from, this);
  const universalBlankReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const universalBlankReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookCityService.universalBlankReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookCityService.universalBlankReq)
    MergeFrom(*source);
  }
}

void universalBlankReq::MergeFrom(const universalBlankReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookCityService.universalBlankReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_daytime();
      daytime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.daytime_);
    }
    if (cached_has_bits & 0x00000002u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void universalBlankReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookCityService.universalBlankReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void universalBlankReq::CopyFrom(const universalBlankReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookCityService.universalBlankReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool universalBlankReq::IsInitialized() const {
  return true;
}

void universalBlankReq::Swap(universalBlankReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void universalBlankReq::InternalSwap(universalBlankReq* other) {
  using std::swap;
  daytime_.Swap(&other->daytime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(count_, other->count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata universalBlankReq::GetMetadata() const {
  protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void mostlybooks::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int mostlybooks::kBookIdFieldNumber;
const int mostlybooks::kBookNameFieldNumber;
const int mostlybooks::kSearchTimesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

mostlybooks::mostlybooks()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bookcity_2eproto::scc_info_mostlybooks.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookCityService.mostlybooks)
}
mostlybooks::mostlybooks(const mostlybooks& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bookid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bookid()) {
    bookid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookid_);
  }
  bookname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bookname()) {
    bookname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookname_);
  }
  searchtimes_ = from.searchtimes_;
  // @@protoc_insertion_point(copy_constructor:bookCityService.mostlybooks)
}

void mostlybooks::SharedCtor() {
  bookid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bookname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  searchtimes_ = 0;
}

mostlybooks::~mostlybooks() {
  // @@protoc_insertion_point(destructor:bookCityService.mostlybooks)
  SharedDtor();
}

void mostlybooks::SharedDtor() {
  bookid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bookname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void mostlybooks::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* mostlybooks::descriptor() {
  ::protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const mostlybooks& mostlybooks::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bookcity_2eproto::scc_info_mostlybooks.base);
  return *internal_default_instance();
}


void mostlybooks::Clear() {
// @@protoc_insertion_point(message_clear_start:bookCityService.mostlybooks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      bookid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      bookname_.ClearNonDefaultToEmptyNoArena();
    }
  }
  searchtimes_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool mostlybooks::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookCityService.mostlybooks)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string bookId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bookid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bookid().data(), static_cast<int>(this->bookid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.mostlybooks.bookId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string bookName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bookname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bookname().data(), static_cast<int>(this->bookname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.mostlybooks.bookName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 searchTimes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_searchtimes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &searchtimes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookCityService.mostlybooks)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookCityService.mostlybooks)
  return false;
#undef DO_
}

void mostlybooks::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookCityService.mostlybooks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string bookId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookid().data(), static_cast<int>(this->bookid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.mostlybooks.bookId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bookid(), output);
  }

  // required string bookName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookname().data(), static_cast<int>(this->bookname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.mostlybooks.bookName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->bookname(), output);
  }

  // required int32 searchTimes = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->searchtimes(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bookCityService.mostlybooks)
}

::google::protobuf::uint8* mostlybooks::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookCityService.mostlybooks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string bookId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookid().data(), static_cast<int>(this->bookid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.mostlybooks.bookId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bookid(), target);
  }

  // required string bookName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookname().data(), static_cast<int>(this->bookname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.mostlybooks.bookName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bookname(), target);
  }

  // required int32 searchTimes = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->searchtimes(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookCityService.mostlybooks)
  return target;
}

size_t mostlybooks::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:bookCityService.mostlybooks)
  size_t total_size = 0;

  if (has_bookid()) {
    // required string bookId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bookid());
  }

  if (has_bookname()) {
    // required string bookName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bookname());
  }

  if (has_searchtimes()) {
    // required int32 searchTimes = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->searchtimes());
  }

  return total_size;
}
size_t mostlybooks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookCityService.mostlybooks)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string bookId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bookid());

    // required string bookName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bookname());

    // required int32 searchTimes = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->searchtimes());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void mostlybooks::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookCityService.mostlybooks)
  GOOGLE_DCHECK_NE(&from, this);
  const mostlybooks* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const mostlybooks>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookCityService.mostlybooks)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookCityService.mostlybooks)
    MergeFrom(*source);
  }
}

void mostlybooks::MergeFrom(const mostlybooks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookCityService.mostlybooks)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_bookid();
      bookid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_bookname();
      bookname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookname_);
    }
    if (cached_has_bits & 0x00000004u) {
      searchtimes_ = from.searchtimes_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void mostlybooks::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookCityService.mostlybooks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void mostlybooks::CopyFrom(const mostlybooks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookCityService.mostlybooks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool mostlybooks::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void mostlybooks::Swap(mostlybooks* other) {
  if (other == this) return;
  InternalSwap(other);
}
void mostlybooks::InternalSwap(mostlybooks* other) {
  using std::swap;
  bookid_.Swap(&other->bookid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bookname_.Swap(&other->bookname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(searchtimes_, other->searchtimes_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata mostlybooks::GetMetadata() const {
  protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void mostlySearchRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int mostlySearchRes::kListsFieldNumber;
const int mostlySearchRes::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

mostlySearchRes::mostlySearchRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bookcity_2eproto::scc_info_mostlySearchRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookCityService.mostlySearchRes)
}
mostlySearchRes::mostlySearchRes(const mostlySearchRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      lists_(from.lists_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:bookCityService.mostlySearchRes)
}

void mostlySearchRes::SharedCtor() {
  count_ = 0;
}

mostlySearchRes::~mostlySearchRes() {
  // @@protoc_insertion_point(destructor:bookCityService.mostlySearchRes)
  SharedDtor();
}

void mostlySearchRes::SharedDtor() {
}

void mostlySearchRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* mostlySearchRes::descriptor() {
  ::protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const mostlySearchRes& mostlySearchRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bookcity_2eproto::scc_info_mostlySearchRes.base);
  return *internal_default_instance();
}


void mostlySearchRes::Clear() {
// @@protoc_insertion_point(message_clear_start:bookCityService.mostlySearchRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lists_.Clear();
  count_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool mostlySearchRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookCityService.mostlySearchRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .bookCityService.mostlybooks lists = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lists()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookCityService.mostlySearchRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookCityService.mostlySearchRes)
  return false;
#undef DO_
}

void mostlySearchRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookCityService.mostlySearchRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bookCityService.mostlybooks lists = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lists_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->lists(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 count = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bookCityService.mostlySearchRes)
}

::google::protobuf::uint8* mostlySearchRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookCityService.mostlySearchRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bookCityService.mostlybooks lists = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lists_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->lists(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 count = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookCityService.mostlySearchRes)
  return target;
}

size_t mostlySearchRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookCityService.mostlySearchRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 count = 2;
  if (has_count()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }
  // repeated .bookCityService.mostlybooks lists = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->lists_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lists(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void mostlySearchRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookCityService.mostlySearchRes)
  GOOGLE_DCHECK_NE(&from, this);
  const mostlySearchRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const mostlySearchRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookCityService.mostlySearchRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookCityService.mostlySearchRes)
    MergeFrom(*source);
  }
}

void mostlySearchRes::MergeFrom(const mostlySearchRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookCityService.mostlySearchRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lists_.MergeFrom(from.lists_);
  if (from.has_count()) {
    set_count(from.count());
  }
}

void mostlySearchRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookCityService.mostlySearchRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void mostlySearchRes::CopyFrom(const mostlySearchRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookCityService.mostlySearchRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool mostlySearchRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->lists())) return false;
  return true;
}

void mostlySearchRes::Swap(mostlySearchRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void mostlySearchRes::InternalSwap(mostlySearchRes* other) {
  using std::swap;
  CastToBase(&lists_)->InternalSwap(CastToBase(&other->lists_));
  swap(count_, other->count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata mostlySearchRes::GetMetadata() const {
  protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void fuzzySearchRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int fuzzySearchRequest::kWordsFieldNumber;
const int fuzzySearchRequest::kDayTimeFieldNumber;
const int fuzzySearchRequest::kCountFieldNumber;
const int fuzzySearchRequest::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

fuzzySearchRequest::fuzzySearchRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bookcity_2eproto::scc_info_fuzzySearchRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookCityService.fuzzySearchRequest)
}
fuzzySearchRequest::fuzzySearchRequest(const fuzzySearchRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  words_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_words()) {
    words_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.words_);
  }
  daytime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_daytime()) {
    daytime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.daytime_);
  }
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&offset_) -
    reinterpret_cast<char*>(&count_)) + sizeof(offset_));
  // @@protoc_insertion_point(copy_constructor:bookCityService.fuzzySearchRequest)
}

void fuzzySearchRequest::SharedCtor() {
  words_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  daytime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&offset_) -
      reinterpret_cast<char*>(&count_)) + sizeof(offset_));
}

fuzzySearchRequest::~fuzzySearchRequest() {
  // @@protoc_insertion_point(destructor:bookCityService.fuzzySearchRequest)
  SharedDtor();
}

void fuzzySearchRequest::SharedDtor() {
  words_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  daytime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void fuzzySearchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* fuzzySearchRequest::descriptor() {
  ::protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const fuzzySearchRequest& fuzzySearchRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bookcity_2eproto::scc_info_fuzzySearchRequest.base);
  return *internal_default_instance();
}


void fuzzySearchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bookCityService.fuzzySearchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      words_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      daytime_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&count_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&offset_) -
        reinterpret_cast<char*>(&count_)) + sizeof(offset_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool fuzzySearchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookCityService.fuzzySearchRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string words = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_words()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->words().data(), static_cast<int>(this->words().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.fuzzySearchRequest.words");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string dayTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_daytime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->daytime().data(), static_cast<int>(this->daytime().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bookCityService.fuzzySearchRequest.dayTime");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 offset = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookCityService.fuzzySearchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookCityService.fuzzySearchRequest)
  return false;
#undef DO_
}

void fuzzySearchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookCityService.fuzzySearchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string words = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->words().data(), static_cast<int>(this->words().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.fuzzySearchRequest.words");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->words(), output);
  }

  // required string dayTime = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->daytime().data(), static_cast<int>(this->daytime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.fuzzySearchRequest.dayTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->daytime(), output);
  }

  // required int32 count = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->count(), output);
  }

  // required int32 offset = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->offset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bookCityService.fuzzySearchRequest)
}

::google::protobuf::uint8* fuzzySearchRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookCityService.fuzzySearchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string words = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->words().data(), static_cast<int>(this->words().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.fuzzySearchRequest.words");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->words(), target);
  }

  // required string dayTime = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->daytime().data(), static_cast<int>(this->daytime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bookCityService.fuzzySearchRequest.dayTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->daytime(), target);
  }

  // required int32 count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->count(), target);
  }

  // required int32 offset = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->offset(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookCityService.fuzzySearchRequest)
  return target;
}

size_t fuzzySearchRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:bookCityService.fuzzySearchRequest)
  size_t total_size = 0;

  if (has_words()) {
    // required string words = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->words());
  }

  if (has_daytime()) {
    // required string dayTime = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->daytime());
  }

  if (has_count()) {
    // required int32 count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  if (has_offset()) {
    // required int32 offset = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->offset());
  }

  return total_size;
}
size_t fuzzySearchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookCityService.fuzzySearchRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string words = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->words());

    // required string dayTime = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->daytime());

    // required int32 count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());

    // required int32 offset = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->offset());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void fuzzySearchRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookCityService.fuzzySearchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const fuzzySearchRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const fuzzySearchRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookCityService.fuzzySearchRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookCityService.fuzzySearchRequest)
    MergeFrom(*source);
  }
}

void fuzzySearchRequest::MergeFrom(const fuzzySearchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookCityService.fuzzySearchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_words();
      words_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.words_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_daytime();
      daytime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.daytime_);
    }
    if (cached_has_bits & 0x00000004u) {
      count_ = from.count_;
    }
    if (cached_has_bits & 0x00000008u) {
      offset_ = from.offset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void fuzzySearchRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookCityService.fuzzySearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void fuzzySearchRequest::CopyFrom(const fuzzySearchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookCityService.fuzzySearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool fuzzySearchRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void fuzzySearchRequest::Swap(fuzzySearchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void fuzzySearchRequest::InternalSwap(fuzzySearchRequest* other) {
  using std::swap;
  words_.Swap(&other->words_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  daytime_.Swap(&other->daytime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(count_, other->count_);
  swap(offset_, other->offset_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata fuzzySearchRequest::GetMetadata() const {
  protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookcity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

bookCityService::~bookCityService() {}

const ::google::protobuf::ServiceDescriptor* bookCityService::descriptor() {
  protobuf_bookcity_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bookcity_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* bookCityService::GetDescriptor() {
  return descriptor();
}

void bookCityService::addBookInfoFun(::google::protobuf::RpcController* controller,
                         const ::bookCityService::bookBaseInfo*,
                         ::commonService::commonResp*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method addBookInfoFun() not implemented.");
  done->Run();
}

void bookCityService::searchBookInfoFun(::google::protobuf::RpcController* controller,
                         const ::bookCityService::searchBookReq*,
                         ::bookCityService::booksRespList*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method searchBookInfoFun() not implemented.");
  done->Run();
}

void bookCityService::setBookInfoFun(::google::protobuf::RpcController* controller,
                         const ::bookCityService::updateBookBaseInfo*,
                         ::commonService::commonResp*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method setBookInfoFun() not implemented.");
  done->Run();
}

void bookCityService::getAllBookInfoFun(::google::protobuf::RpcController* controller,
                         const ::bookCityService::getAllBookInfoReq*,
                         ::bookCityService::booksRespList*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method getAllBookInfoFun() not implemented.");
  done->Run();
}

void bookCityService::delBookInfoByIdFun(::google::protobuf::RpcController* controller,
                         const ::bookCityService::delBookReq*,
                         ::commonService::commonResp*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method delBookInfoByIdFun() not implemented.");
  done->Run();
}

void bookCityService::getBookADSFun(::google::protobuf::RpcController* controller,
                         const ::bookCityService::adsReq*,
                         ::bookCityService::adsRes*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method getBookADSFun() not implemented.");
  done->Run();
}

void bookCityService::getRecommendBookFun(::google::protobuf::RpcController* controller,
                         const ::bookCityService::recommendBookReq*,
                         ::bookCityService::recommendBookRes*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method getRecommendBookFun() not implemented.");
  done->Run();
}

void bookCityService::getBrowseBookFun(::google::protobuf::RpcController* controller,
                         const ::bookCityService::browseBookReq*,
                         ::bookCityService::browseBookRes*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method getBrowseBookFun() not implemented.");
  done->Run();
}

void bookCityService::getMostlySearchFun(::google::protobuf::RpcController* controller,
                         const ::bookCityService::universalBlankReq*,
                         ::bookCityService::mostlySearchRes*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method getMostlySearchFun() not implemented.");
  done->Run();
}

void bookCityService::getPopularSearchFun(::google::protobuf::RpcController* controller,
                         const ::bookCityService::universalBlankReq*,
                         ::bookCityService::booksRespList*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method getPopularSearchFun() not implemented.");
  done->Run();
}

void bookCityService::FuzzySearchBooksFun(::google::protobuf::RpcController* controller,
                         const ::bookCityService::fuzzySearchRequest*,
                         ::bookCityService::booksRespList*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method FuzzySearchBooksFun() not implemented.");
  done->Run();
}

void bookCityService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_bookcity_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      addBookInfoFun(controller,
             ::google::protobuf::down_cast<const ::bookCityService::bookBaseInfo*>(request),
             ::google::protobuf::down_cast< ::commonService::commonResp*>(response),
             done);
      break;
    case 1:
      searchBookInfoFun(controller,
             ::google::protobuf::down_cast<const ::bookCityService::searchBookReq*>(request),
             ::google::protobuf::down_cast< ::bookCityService::booksRespList*>(response),
             done);
      break;
    case 2:
      setBookInfoFun(controller,
             ::google::protobuf::down_cast<const ::bookCityService::updateBookBaseInfo*>(request),
             ::google::protobuf::down_cast< ::commonService::commonResp*>(response),
             done);
      break;
    case 3:
      getAllBookInfoFun(controller,
             ::google::protobuf::down_cast<const ::bookCityService::getAllBookInfoReq*>(request),
             ::google::protobuf::down_cast< ::bookCityService::booksRespList*>(response),
             done);
      break;
    case 4:
      delBookInfoByIdFun(controller,
             ::google::protobuf::down_cast<const ::bookCityService::delBookReq*>(request),
             ::google::protobuf::down_cast< ::commonService::commonResp*>(response),
             done);
      break;
    case 5:
      getBookADSFun(controller,
             ::google::protobuf::down_cast<const ::bookCityService::adsReq*>(request),
             ::google::protobuf::down_cast< ::bookCityService::adsRes*>(response),
             done);
      break;
    case 6:
      getRecommendBookFun(controller,
             ::google::protobuf::down_cast<const ::bookCityService::recommendBookReq*>(request),
             ::google::protobuf::down_cast< ::bookCityService::recommendBookRes*>(response),
             done);
      break;
    case 7:
      getBrowseBookFun(controller,
             ::google::protobuf::down_cast<const ::bookCityService::browseBookReq*>(request),
             ::google::protobuf::down_cast< ::bookCityService::browseBookRes*>(response),
             done);
      break;
    case 8:
      getMostlySearchFun(controller,
             ::google::protobuf::down_cast<const ::bookCityService::universalBlankReq*>(request),
             ::google::protobuf::down_cast< ::bookCityService::mostlySearchRes*>(response),
             done);
      break;
    case 9:
      getPopularSearchFun(controller,
             ::google::protobuf::down_cast<const ::bookCityService::universalBlankReq*>(request),
             ::google::protobuf::down_cast< ::bookCityService::booksRespList*>(response),
             done);
      break;
    case 10:
      FuzzySearchBooksFun(controller,
             ::google::protobuf::down_cast<const ::bookCityService::fuzzySearchRequest*>(request),
             ::google::protobuf::down_cast< ::bookCityService::booksRespList*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& bookCityService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::bookCityService::bookBaseInfo::default_instance();
    case 1:
      return ::bookCityService::searchBookReq::default_instance();
    case 2:
      return ::bookCityService::updateBookBaseInfo::default_instance();
    case 3:
      return ::bookCityService::getAllBookInfoReq::default_instance();
    case 4:
      return ::bookCityService::delBookReq::default_instance();
    case 5:
      return ::bookCityService::adsReq::default_instance();
    case 6:
      return ::bookCityService::recommendBookReq::default_instance();
    case 7:
      return ::bookCityService::browseBookReq::default_instance();
    case 8:
      return ::bookCityService::universalBlankReq::default_instance();
    case 9:
      return ::bookCityService::universalBlankReq::default_instance();
    case 10:
      return ::bookCityService::fuzzySearchRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& bookCityService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::commonService::commonResp::default_instance();
    case 1:
      return ::bookCityService::booksRespList::default_instance();
    case 2:
      return ::commonService::commonResp::default_instance();
    case 3:
      return ::bookCityService::booksRespList::default_instance();
    case 4:
      return ::commonService::commonResp::default_instance();
    case 5:
      return ::bookCityService::adsRes::default_instance();
    case 6:
      return ::bookCityService::recommendBookRes::default_instance();
    case 7:
      return ::bookCityService::browseBookRes::default_instance();
    case 8:
      return ::bookCityService::mostlySearchRes::default_instance();
    case 9:
      return ::bookCityService::booksRespList::default_instance();
    case 10:
      return ::bookCityService::booksRespList::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

bookCityService_Stub::bookCityService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
bookCityService_Stub::bookCityService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
bookCityService_Stub::~bookCityService_Stub() {
  if (owns_channel_) delete channel_;
}

void bookCityService_Stub::addBookInfoFun(::google::protobuf::RpcController* controller,
                              const ::bookCityService::bookBaseInfo* request,
                              ::commonService::commonResp* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void bookCityService_Stub::searchBookInfoFun(::google::protobuf::RpcController* controller,
                              const ::bookCityService::searchBookReq* request,
                              ::bookCityService::booksRespList* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void bookCityService_Stub::setBookInfoFun(::google::protobuf::RpcController* controller,
                              const ::bookCityService::updateBookBaseInfo* request,
                              ::commonService::commonResp* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void bookCityService_Stub::getAllBookInfoFun(::google::protobuf::RpcController* controller,
                              const ::bookCityService::getAllBookInfoReq* request,
                              ::bookCityService::booksRespList* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void bookCityService_Stub::delBookInfoByIdFun(::google::protobuf::RpcController* controller,
                              const ::bookCityService::delBookReq* request,
                              ::commonService::commonResp* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void bookCityService_Stub::getBookADSFun(::google::protobuf::RpcController* controller,
                              const ::bookCityService::adsReq* request,
                              ::bookCityService::adsRes* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}
void bookCityService_Stub::getRecommendBookFun(::google::protobuf::RpcController* controller,
                              const ::bookCityService::recommendBookReq* request,
                              ::bookCityService::recommendBookRes* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(6),
                       controller, request, response, done);
}
void bookCityService_Stub::getBrowseBookFun(::google::protobuf::RpcController* controller,
                              const ::bookCityService::browseBookReq* request,
                              ::bookCityService::browseBookRes* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(7),
                       controller, request, response, done);
}
void bookCityService_Stub::getMostlySearchFun(::google::protobuf::RpcController* controller,
                              const ::bookCityService::universalBlankReq* request,
                              ::bookCityService::mostlySearchRes* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(8),
                       controller, request, response, done);
}
void bookCityService_Stub::getPopularSearchFun(::google::protobuf::RpcController* controller,
                              const ::bookCityService::universalBlankReq* request,
                              ::bookCityService::booksRespList* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(9),
                       controller, request, response, done);
}
void bookCityService_Stub::FuzzySearchBooksFun(::google::protobuf::RpcController* controller,
                              const ::bookCityService::fuzzySearchRequest* request,
                              ::bookCityService::booksRespList* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(10),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace bookCityService
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bookCityService::bookBaseInfo* Arena::CreateMaybeMessage< ::bookCityService::bookBaseInfo >(Arena* arena) {
  return Arena::CreateInternal< ::bookCityService::bookBaseInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bookCityService::updateBookBaseInfo* Arena::CreateMaybeMessage< ::bookCityService::updateBookBaseInfo >(Arena* arena) {
  return Arena::CreateInternal< ::bookCityService::updateBookBaseInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bookCityService::bookDownInfo* Arena::CreateMaybeMessage< ::bookCityService::bookDownInfo >(Arena* arena) {
  return Arena::CreateInternal< ::bookCityService::bookDownInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bookCityService::bookGradeInfo* Arena::CreateMaybeMessage< ::bookCityService::bookGradeInfo >(Arena* arena) {
  return Arena::CreateInternal< ::bookCityService::bookGradeInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bookCityService::boocomCombinekInfo* Arena::CreateMaybeMessage< ::bookCityService::boocomCombinekInfo >(Arena* arena) {
  return Arena::CreateInternal< ::bookCityService::boocomCombinekInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bookCityService::bookMarkItem* Arena::CreateMaybeMessage< ::bookCityService::bookMarkItem >(Arena* arena) {
  return Arena::CreateInternal< ::bookCityService::bookMarkItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bookCityService::getAllBookInfoReq* Arena::CreateMaybeMessage< ::bookCityService::getAllBookInfoReq >(Arena* arena) {
  return Arena::CreateInternal< ::bookCityService::getAllBookInfoReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bookCityService::searchBookReq* Arena::CreateMaybeMessage< ::bookCityService::searchBookReq >(Arena* arena) {
  return Arena::CreateInternal< ::bookCityService::searchBookReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bookCityService::booksRespList* Arena::CreateMaybeMessage< ::bookCityService::booksRespList >(Arena* arena) {
  return Arena::CreateInternal< ::bookCityService::booksRespList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bookCityService::getBookTypeReq* Arena::CreateMaybeMessage< ::bookCityService::getBookTypeReq >(Arena* arena) {
  return Arena::CreateInternal< ::bookCityService::getBookTypeReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bookCityService::delBookReq* Arena::CreateMaybeMessage< ::bookCityService::delBookReq >(Arena* arena) {
  return Arena::CreateInternal< ::bookCityService::delBookReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bookCityService::adsReq* Arena::CreateMaybeMessage< ::bookCityService::adsReq >(Arena* arena) {
  return Arena::CreateInternal< ::bookCityService::adsReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bookCityService::adInfo* Arena::CreateMaybeMessage< ::bookCityService::adInfo >(Arena* arena) {
  return Arena::CreateInternal< ::bookCityService::adInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bookCityService::adsRes* Arena::CreateMaybeMessage< ::bookCityService::adsRes >(Arena* arena) {
  return Arena::CreateInternal< ::bookCityService::adsRes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bookCityService::recommendBookReq* Arena::CreateMaybeMessage< ::bookCityService::recommendBookReq >(Arena* arena) {
  return Arena::CreateInternal< ::bookCityService::recommendBookReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bookCityService::recommendBookRes* Arena::CreateMaybeMessage< ::bookCityService::recommendBookRes >(Arena* arena) {
  return Arena::CreateInternal< ::bookCityService::recommendBookRes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bookCityService::browseBookReq* Arena::CreateMaybeMessage< ::bookCityService::browseBookReq >(Arena* arena) {
  return Arena::CreateInternal< ::bookCityService::browseBookReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bookCityService::browseBookRes* Arena::CreateMaybeMessage< ::bookCityService::browseBookRes >(Arena* arena) {
  return Arena::CreateInternal< ::bookCityService::browseBookRes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bookCityService::universalBlankReq* Arena::CreateMaybeMessage< ::bookCityService::universalBlankReq >(Arena* arena) {
  return Arena::CreateInternal< ::bookCityService::universalBlankReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bookCityService::mostlybooks* Arena::CreateMaybeMessage< ::bookCityService::mostlybooks >(Arena* arena) {
  return Arena::CreateInternal< ::bookCityService::mostlybooks >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bookCityService::mostlySearchRes* Arena::CreateMaybeMessage< ::bookCityService::mostlySearchRes >(Arena* arena) {
  return Arena::CreateInternal< ::bookCityService::mostlySearchRes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bookCityService::fuzzySearchRequest* Arena::CreateMaybeMessage< ::bookCityService::fuzzySearchRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bookCityService::fuzzySearchRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
