// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#include "common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_common_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_commentItem;
}  // namespace protobuf_common_2eproto
namespace commonService {
class commonRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<commonResp>
      _instance;
} _commonResp_default_instance_;
class supportReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<supportReq>
      _instance;
} _supportReq_default_instance_;
class commentItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<commentItem>
      _instance;
} _commentItem_default_instance_;
class DelCommentReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DelCommentReq>
      _instance;
} _DelCommentReq_default_instance_;
class commentListRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<commentListResp>
      _instance;
} _commentListResp_default_instance_;
class getCommentReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<getCommentReq>
      _instance;
} _getCommentReq_default_instance_;
}  // namespace commonService
namespace protobuf_common_2eproto {
static void InitDefaultscommonResp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonService::_commonResp_default_instance_;
    new (ptr) ::commonService::commonResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonService::commonResp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_commonResp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscommonResp}, {}};

static void InitDefaultssupportReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonService::_supportReq_default_instance_;
    new (ptr) ::commonService::supportReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonService::supportReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_supportReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssupportReq}, {}};

static void InitDefaultscommentItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonService::_commentItem_default_instance_;
    new (ptr) ::commonService::commentItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonService::commentItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_commentItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscommentItem}, {}};

static void InitDefaultsDelCommentReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonService::_DelCommentReq_default_instance_;
    new (ptr) ::commonService::DelCommentReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonService::DelCommentReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DelCommentReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDelCommentReq}, {}};

static void InitDefaultscommentListResp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonService::_commentListResp_default_instance_;
    new (ptr) ::commonService::commentListResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonService::commentListResp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_commentListResp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultscommentListResp}, {
      &protobuf_common_2eproto::scc_info_commentItem.base,}};

static void InitDefaultsgetCommentReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonService::_getCommentReq_default_instance_;
    new (ptr) ::commonService::getCommentReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonService::getCommentReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_getCommentReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgetCommentReq}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_commonResp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_supportReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_commentItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DelCommentReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_commentListResp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_getCommentReq.base);
}

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::commonResp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::commonResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::commonResp, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::commonResp, errorres_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::supportReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::supportReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::supportReq, bookid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::supportReq, commentid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::supportReq, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::supportReq, timestamp_),
  0,
  3,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::commentItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::commentItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::commentItem, bookid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::commentItem, pagenum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::commentItem, commentid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::commentItem, parentid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::commentItem, commentcontent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::commentItem, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::commentItem, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::commentItem, headurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::commentItem, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::commentItem, hitid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::commentItem, childcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::commentItem, childcomments_),
  0,
  7,
  8,
  9,
  1,
  2,
  3,
  4,
  5,
  6,
  10,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::DelCommentReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::DelCommentReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::DelCommentReq, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::DelCommentReq, commentid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::commentListResp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::commentListResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::commentListResp, lists_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::commentListResp, count_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::getCommentReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::getCommentReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::getCommentReq, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::getCommentReq, bookid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::getCommentReq, pagenum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::getCommentReq, lines_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonService::getCommentReq, count_),
  0,
  1,
  2,
  3,
  4,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::commonService::commonResp)},
  { 9, 18, sizeof(::commonService::supportReq)},
  { 22, 39, sizeof(::commonService::commentItem)},
  { 51, 58, sizeof(::commonService::DelCommentReq)},
  { 60, 67, sizeof(::commonService::commentListResp)},
  { 69, 79, sizeof(::commonService::getCommentReq)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonService::_commonResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonService::_supportReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonService::_commentItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonService::_DelCommentReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonService::_commentListResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonService::_getCommentReq_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "common.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014common.proto\022\rcommonService\",\n\ncommonR"
      "esp\022\014\n\004code\030\001 \002(\005\022\020\n\010errorRes\030\002 \001(\t\"R\n\ns"
      "upportReq\022\016\n\006bookId\030\001 \002(\t\022\021\n\tcommentId\030\002"
      " \001(\005\022\016\n\006userId\030\003 \002(\t\022\021\n\ttimestamp\030\004 \002(\t\""
      "\207\002\n\013commentItem\022\016\n\006bookId\030\001 \001(\t\022\017\n\007pageN"
      "um\030\002 \001(\005\022\021\n\tcommentId\030\003 \001(\005\022\020\n\010parentId\030"
      "\004 \001(\005\022\026\n\016commentContent\030\005 \002(\t\022\016\n\006userId\030"
      "\006 \002(\t\022\020\n\010nickName\030\007 \001(\t\022\017\n\007headUrl\030\010 \001(\t"
      "\022\021\n\ttimestamp\030\t \002(\t\022\r\n\005hitId\030\n \001(\t\022\022\n\nch"
      "ildCount\030\013 \001(\005\0221\n\rchildComments\030\014 \003(\0132\032."
      "commonService.commentItem\"2\n\rDelCommentR"
      "eq\022\016\n\006userId\030\001 \002(\t\022\021\n\tcommentId\030\002 \002(\005\"K\n"
      "\017commentListResp\022)\n\005lists\030\001 \003(\0132\032.common"
      "Service.commentItem\022\r\n\005count\030\002 \002(\005\"^\n\rge"
      "tCommentReq\022\016\n\006userId\030\001 \001(\t\022\016\n\006bookId\030\002 "
      "\001(\t\022\017\n\007pageNum\030\003 \001(\005\022\r\n\005lines\030\004 \001(\005\022\r\n\005c"
      "ount\030\005 \001(\0052\243\004\n\rcommonService\022F\n\raddComme"
      "ntFun\022\032.commonService.commentItem\032\031.comm"
      "onService.commonResp\022H\n\rdelCommentFun\022\034."
      "commonService.DelCommentReq\032\031.commonServ"
      "ice.commonResp\022M\n\rgetCommentFun\022\034.common"
      "Service.getCommentReq\032\036.commonService.co"
      "mmentListResp\022S\n\023getCommentRecordFun\022\034.c"
      "ommonService.getCommentReq\032\036.commonServi"
      "ce.commentListResp\022N\n\023delCommentRecordFu"
      "n\022\034.commonService.DelCommentReq\032\031.common"
      "Service.commonResp\022E\n\raddSupportFun\022\031.co"
      "mmonService.supportReq\032\031.commonService.c"
      "ommonResp\022E\n\rdelSupportFun\022\031.commonServi"
      "ce.supportReq\032\031.commonService.commonResp"
      "B\003\200\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1205);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "common.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_common_2eproto
namespace commonService {

// ===================================================================

void commonResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int commonResp::kCodeFieldNumber;
const int commonResp::kErrorResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

commonResp::commonResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_commonResp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonService.commonResp)
}
commonResp::commonResp(const commonResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errorres_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_errorres()) {
    errorres_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errorres_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:commonService.commonResp)
}

void commonResp::SharedCtor() {
  errorres_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

commonResp::~commonResp() {
  // @@protoc_insertion_point(destructor:commonService.commonResp)
  SharedDtor();
}

void commonResp::SharedDtor() {
  errorres_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void commonResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* commonResp::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const commonResp& commonResp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_commonResp.base);
  return *internal_default_instance();
}


void commonResp::Clear() {
// @@protoc_insertion_point(message_clear_start:commonService.commonResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    errorres_.ClearNonDefaultToEmptyNoArena();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool commonResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonService.commonResp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string errorRes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errorres()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->errorres().data(), static_cast<int>(this->errorres().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "commonService.commonResp.errorRes");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonService.commonResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonService.commonResp)
  return false;
#undef DO_
}

void commonResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonService.commonResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string errorRes = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->errorres().data(), static_cast<int>(this->errorres().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commonService.commonResp.errorRes");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errorres(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonService.commonResp)
}

::google::protobuf::uint8* commonResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:commonService.commonResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string errorRes = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->errorres().data(), static_cast<int>(this->errorres().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commonService.commonResp.errorRes");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errorres(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonService.commonResp)
  return target;
}

size_t commonResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonService.commonResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }
  // optional string errorRes = 2;
  if (has_errorres()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errorres());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void commonResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonService.commonResp)
  GOOGLE_DCHECK_NE(&from, this);
  const commonResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const commonResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonService.commonResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonService.commonResp)
    MergeFrom(*source);
  }
}

void commonResp::MergeFrom(const commonResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonService.commonResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_errorres();
      errorres_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errorres_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void commonResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonService.commonResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void commonResp::CopyFrom(const commonResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonService.commonResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool commonResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void commonResp::Swap(commonResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void commonResp::InternalSwap(commonResp* other) {
  using std::swap;
  errorres_.Swap(&other->errorres_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata commonResp::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void supportReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int supportReq::kBookIdFieldNumber;
const int supportReq::kCommentIdFieldNumber;
const int supportReq::kUserIdFieldNumber;
const int supportReq::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

supportReq::supportReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_supportReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonService.supportReq)
}
supportReq::supportReq(const supportReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bookid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bookid()) {
    bookid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookid_);
  }
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_userid()) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_timestamp()) {
    timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timestamp_);
  }
  commentid_ = from.commentid_;
  // @@protoc_insertion_point(copy_constructor:commonService.supportReq)
}

void supportReq::SharedCtor() {
  bookid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  commentid_ = 0;
}

supportReq::~supportReq() {
  // @@protoc_insertion_point(destructor:commonService.supportReq)
  SharedDtor();
}

void supportReq::SharedDtor() {
  bookid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void supportReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* supportReq::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const supportReq& supportReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_supportReq.base);
  return *internal_default_instance();
}


void supportReq::Clear() {
// @@protoc_insertion_point(message_clear_start:commonService.supportReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      bookid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      userid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      timestamp_.ClearNonDefaultToEmptyNoArena();
    }
  }
  commentid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool supportReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonService.supportReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string bookId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bookid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bookid().data(), static_cast<int>(this->bookid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "commonService.supportReq.bookId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 commentId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_commentid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &commentid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string userId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "commonService.supportReq.userId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string timestamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timestamp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->timestamp().data(), static_cast<int>(this->timestamp().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "commonService.supportReq.timestamp");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonService.supportReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonService.supportReq)
  return false;
#undef DO_
}

void supportReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonService.supportReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string bookId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookid().data(), static_cast<int>(this->bookid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commonService.supportReq.bookId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bookid(), output);
  }

  // optional int32 commentId = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->commentid(), output);
  }

  // required string userId = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commonService.supportReq.userId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->userid(), output);
  }

  // required string timestamp = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->timestamp().data(), static_cast<int>(this->timestamp().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commonService.supportReq.timestamp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonService.supportReq)
}

::google::protobuf::uint8* supportReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:commonService.supportReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string bookId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookid().data(), static_cast<int>(this->bookid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commonService.supportReq.bookId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bookid(), target);
  }

  // optional int32 commentId = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->commentid(), target);
  }

  // required string userId = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commonService.supportReq.userId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->userid(), target);
  }

  // required string timestamp = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->timestamp().data(), static_cast<int>(this->timestamp().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commonService.supportReq.timestamp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonService.supportReq)
  return target;
}

size_t supportReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:commonService.supportReq)
  size_t total_size = 0;

  if (has_bookid()) {
    // required string bookId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bookid());
  }

  if (has_userid()) {
    // required string userId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  if (has_timestamp()) {
    // required string timestamp = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->timestamp());
  }

  return total_size;
}
size_t supportReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonService.supportReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string bookId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bookid());

    // required string userId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());

    // required string timestamp = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->timestamp());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional int32 commentId = 2;
  if (has_commentid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->commentid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void supportReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonService.supportReq)
  GOOGLE_DCHECK_NE(&from, this);
  const supportReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const supportReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonService.supportReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonService.supportReq)
    MergeFrom(*source);
  }
}

void supportReq::MergeFrom(const supportReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonService.supportReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_bookid();
      bookid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_userid();
      userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_timestamp();
      timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timestamp_);
    }
    if (cached_has_bits & 0x00000008u) {
      commentid_ = from.commentid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void supportReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonService.supportReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void supportReq::CopyFrom(const supportReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonService.supportReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool supportReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void supportReq::Swap(supportReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void supportReq::InternalSwap(supportReq* other) {
  using std::swap;
  bookid_.Swap(&other->bookid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  timestamp_.Swap(&other->timestamp_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(commentid_, other->commentid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata supportReq::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void commentItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int commentItem::kBookIdFieldNumber;
const int commentItem::kPageNumFieldNumber;
const int commentItem::kCommentIdFieldNumber;
const int commentItem::kParentIdFieldNumber;
const int commentItem::kCommentContentFieldNumber;
const int commentItem::kUserIdFieldNumber;
const int commentItem::kNickNameFieldNumber;
const int commentItem::kHeadUrlFieldNumber;
const int commentItem::kTimestampFieldNumber;
const int commentItem::kHitIdFieldNumber;
const int commentItem::kChildCountFieldNumber;
const int commentItem::kChildCommentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

commentItem::commentItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_commentItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonService.commentItem)
}
commentItem::commentItem(const commentItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      childcomments_(from.childcomments_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bookid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bookid()) {
    bookid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookid_);
  }
  commentcontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_commentcontent()) {
    commentcontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commentcontent_);
  }
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_userid()) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  headurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_headurl()) {
    headurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headurl_);
  }
  timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_timestamp()) {
    timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timestamp_);
  }
  hitid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hitid()) {
    hitid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hitid_);
  }
  ::memcpy(&pagenum_, &from.pagenum_,
    static_cast<size_t>(reinterpret_cast<char*>(&childcount_) -
    reinterpret_cast<char*>(&pagenum_)) + sizeof(childcount_));
  // @@protoc_insertion_point(copy_constructor:commonService.commentItem)
}

void commentItem::SharedCtor() {
  bookid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  commentcontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hitid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pagenum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&childcount_) -
      reinterpret_cast<char*>(&pagenum_)) + sizeof(childcount_));
}

commentItem::~commentItem() {
  // @@protoc_insertion_point(destructor:commonService.commentItem)
  SharedDtor();
}

void commentItem::SharedDtor() {
  bookid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  commentcontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hitid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void commentItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* commentItem::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const commentItem& commentItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_commentItem.base);
  return *internal_default_instance();
}


void commentItem::Clear() {
// @@protoc_insertion_point(message_clear_start:commonService.commentItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  childcomments_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      bookid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      commentcontent_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      userid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      nickname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      headurl_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      timestamp_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      hitid_.ClearNonDefaultToEmptyNoArena();
    }
  }
  pagenum_ = 0;
  if (cached_has_bits & 1792u) {
    ::memset(&commentid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&childcount_) -
        reinterpret_cast<char*>(&commentid_)) + sizeof(childcount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool commentItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonService.commentItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string bookId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bookid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bookid().data(), static_cast<int>(this->bookid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "commonService.commentItem.bookId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pageNum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pagenum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pagenum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 commentId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_commentid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &commentid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 parentId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_parentid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &parentid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string commentContent = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_commentcontent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->commentcontent().data(), static_cast<int>(this->commentcontent().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "commonService.commentItem.commentContent");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string userId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "commonService.commentItem.userId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nickName = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "commonService.commentItem.nickName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string headUrl = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_headurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->headurl().data(), static_cast<int>(this->headurl().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "commonService.commentItem.headUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string timestamp = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timestamp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->timestamp().data(), static_cast<int>(this->timestamp().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "commonService.commentItem.timestamp");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string hitId = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hitid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hitid().data(), static_cast<int>(this->hitid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "commonService.commentItem.hitId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 childCount = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_childcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &childcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .commonService.commentItem childComments = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_childcomments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonService.commentItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonService.commentItem)
  return false;
#undef DO_
}

void commentItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonService.commentItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string bookId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookid().data(), static_cast<int>(this->bookid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commonService.commentItem.bookId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bookid(), output);
  }

  // optional int32 pageNum = 2;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pagenum(), output);
  }

  // optional int32 commentId = 3;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->commentid(), output);
  }

  // optional int32 parentId = 4;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->parentid(), output);
  }

  // required string commentContent = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->commentcontent().data(), static_cast<int>(this->commentcontent().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commonService.commentItem.commentContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->commentcontent(), output);
  }

  // required string userId = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commonService.commentItem.userId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->userid(), output);
  }

  // optional string nickName = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commonService.commentItem.nickName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->nickname(), output);
  }

  // optional string headUrl = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->headurl().data(), static_cast<int>(this->headurl().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commonService.commentItem.headUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->headurl(), output);
  }

  // required string timestamp = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->timestamp().data(), static_cast<int>(this->timestamp().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commonService.commentItem.timestamp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->timestamp(), output);
  }

  // optional string hitId = 10;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hitid().data(), static_cast<int>(this->hitid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commonService.commentItem.hitId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->hitid(), output);
  }

  // optional int32 childCount = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->childcount(), output);
  }

  // repeated .commonService.commentItem childComments = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->childcomments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->childcomments(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonService.commentItem)
}

::google::protobuf::uint8* commentItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:commonService.commentItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string bookId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookid().data(), static_cast<int>(this->bookid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commonService.commentItem.bookId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bookid(), target);
  }

  // optional int32 pageNum = 2;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pagenum(), target);
  }

  // optional int32 commentId = 3;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->commentid(), target);
  }

  // optional int32 parentId = 4;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->parentid(), target);
  }

  // required string commentContent = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->commentcontent().data(), static_cast<int>(this->commentcontent().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commonService.commentItem.commentContent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->commentcontent(), target);
  }

  // required string userId = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commonService.commentItem.userId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->userid(), target);
  }

  // optional string nickName = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commonService.commentItem.nickName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->nickname(), target);
  }

  // optional string headUrl = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->headurl().data(), static_cast<int>(this->headurl().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commonService.commentItem.headUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->headurl(), target);
  }

  // required string timestamp = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->timestamp().data(), static_cast<int>(this->timestamp().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commonService.commentItem.timestamp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->timestamp(), target);
  }

  // optional string hitId = 10;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hitid().data(), static_cast<int>(this->hitid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commonService.commentItem.hitId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->hitid(), target);
  }

  // optional int32 childCount = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->childcount(), target);
  }

  // repeated .commonService.commentItem childComments = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->childcomments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->childcomments(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonService.commentItem)
  return target;
}

size_t commentItem::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:commonService.commentItem)
  size_t total_size = 0;

  if (has_commentcontent()) {
    // required string commentContent = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->commentcontent());
  }

  if (has_userid()) {
    // required string userId = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  if (has_timestamp()) {
    // required string timestamp = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->timestamp());
  }

  return total_size;
}
size_t commentItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonService.commentItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000026) ^ 0x00000026) == 0) {  // All required fields are present.
    // required string commentContent = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->commentcontent());

    // required string userId = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());

    // required string timestamp = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->timestamp());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .commonService.commentItem childComments = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->childcomments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->childcomments(static_cast<int>(i)));
    }
  }

  // optional string bookId = 1;
  if (has_bookid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bookid());
  }

  if (_has_bits_[0 / 32] & 24u) {
    // optional string nickName = 7;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional string headUrl = 8;
    if (has_headurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->headurl());
    }

  }
  if (_has_bits_[0 / 32] & 192u) {
    // optional string hitId = 10;
    if (has_hitid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hitid());
    }

    // optional int32 pageNum = 2;
    if (has_pagenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pagenum());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional int32 commentId = 3;
    if (has_commentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->commentid());
    }

    // optional int32 parentId = 4;
    if (has_parentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->parentid());
    }

    // optional int32 childCount = 11;
    if (has_childcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->childcount());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void commentItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonService.commentItem)
  GOOGLE_DCHECK_NE(&from, this);
  const commentItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const commentItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonService.commentItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonService.commentItem)
    MergeFrom(*source);
  }
}

void commentItem::MergeFrom(const commentItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonService.commentItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  childcomments_.MergeFrom(from.childcomments_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_bookid();
      bookid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_commentcontent();
      commentcontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commentcontent_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_userid();
      userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_headurl();
      headurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headurl_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_timestamp();
      timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timestamp_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_hitid();
      hitid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hitid_);
    }
    if (cached_has_bits & 0x00000080u) {
      pagenum_ = from.pagenum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      commentid_ = from.commentid_;
    }
    if (cached_has_bits & 0x00000200u) {
      parentid_ = from.parentid_;
    }
    if (cached_has_bits & 0x00000400u) {
      childcount_ = from.childcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void commentItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonService.commentItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void commentItem::CopyFrom(const commentItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonService.commentItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool commentItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000026) != 0x00000026) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->childcomments())) return false;
  return true;
}

void commentItem::Swap(commentItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void commentItem::InternalSwap(commentItem* other) {
  using std::swap;
  CastToBase(&childcomments_)->InternalSwap(CastToBase(&other->childcomments_));
  bookid_.Swap(&other->bookid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  commentcontent_.Swap(&other->commentcontent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nickname_.Swap(&other->nickname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  headurl_.Swap(&other->headurl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  timestamp_.Swap(&other->timestamp_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  hitid_.Swap(&other->hitid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pagenum_, other->pagenum_);
  swap(commentid_, other->commentid_);
  swap(parentid_, other->parentid_);
  swap(childcount_, other->childcount_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata commentItem::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DelCommentReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelCommentReq::kUserIdFieldNumber;
const int DelCommentReq::kCommentIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelCommentReq::DelCommentReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_DelCommentReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonService.DelCommentReq)
}
DelCommentReq::DelCommentReq(const DelCommentReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_userid()) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  commentid_ = from.commentid_;
  // @@protoc_insertion_point(copy_constructor:commonService.DelCommentReq)
}

void DelCommentReq::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  commentid_ = 0;
}

DelCommentReq::~DelCommentReq() {
  // @@protoc_insertion_point(destructor:commonService.DelCommentReq)
  SharedDtor();
}

void DelCommentReq::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DelCommentReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DelCommentReq::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DelCommentReq& DelCommentReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_DelCommentReq.base);
  return *internal_default_instance();
}


void DelCommentReq::Clear() {
// @@protoc_insertion_point(message_clear_start:commonService.DelCommentReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    userid_.ClearNonDefaultToEmptyNoArena();
  }
  commentid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DelCommentReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonService.DelCommentReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string userId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "commonService.DelCommentReq.userId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 commentId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_commentid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &commentid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonService.DelCommentReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonService.DelCommentReq)
  return false;
#undef DO_
}

void DelCommentReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonService.DelCommentReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string userId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commonService.DelCommentReq.userId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  // required int32 commentId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->commentid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonService.DelCommentReq)
}

::google::protobuf::uint8* DelCommentReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:commonService.DelCommentReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string userId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commonService.DelCommentReq.userId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  // required int32 commentId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->commentid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonService.DelCommentReq)
  return target;
}

size_t DelCommentReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:commonService.DelCommentReq)
  size_t total_size = 0;

  if (has_userid()) {
    // required string userId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  if (has_commentid()) {
    // required int32 commentId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->commentid());
  }

  return total_size;
}
size_t DelCommentReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonService.DelCommentReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string userId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());

    // required int32 commentId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->commentid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DelCommentReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonService.DelCommentReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DelCommentReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelCommentReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonService.DelCommentReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonService.DelCommentReq)
    MergeFrom(*source);
  }
}

void DelCommentReq::MergeFrom(const DelCommentReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonService.DelCommentReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_userid();
      userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
    }
    if (cached_has_bits & 0x00000002u) {
      commentid_ = from.commentid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DelCommentReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonService.DelCommentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelCommentReq::CopyFrom(const DelCommentReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonService.DelCommentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelCommentReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void DelCommentReq::Swap(DelCommentReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelCommentReq::InternalSwap(DelCommentReq* other) {
  using std::swap;
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(commentid_, other->commentid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DelCommentReq::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void commentListResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int commentListResp::kListsFieldNumber;
const int commentListResp::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

commentListResp::commentListResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_commentListResp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonService.commentListResp)
}
commentListResp::commentListResp(const commentListResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      lists_(from.lists_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:commonService.commentListResp)
}

void commentListResp::SharedCtor() {
  count_ = 0;
}

commentListResp::~commentListResp() {
  // @@protoc_insertion_point(destructor:commonService.commentListResp)
  SharedDtor();
}

void commentListResp::SharedDtor() {
}

void commentListResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* commentListResp::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const commentListResp& commentListResp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_commentListResp.base);
  return *internal_default_instance();
}


void commentListResp::Clear() {
// @@protoc_insertion_point(message_clear_start:commonService.commentListResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lists_.Clear();
  count_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool commentListResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonService.commentListResp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .commonService.commentItem lists = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lists()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonService.commentListResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonService.commentListResp)
  return false;
#undef DO_
}

void commentListResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonService.commentListResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .commonService.commentItem lists = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lists_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->lists(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 count = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonService.commentListResp)
}

::google::protobuf::uint8* commentListResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:commonService.commentListResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .commonService.commentItem lists = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lists_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->lists(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 count = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonService.commentListResp)
  return target;
}

size_t commentListResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonService.commentListResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 count = 2;
  if (has_count()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }
  // repeated .commonService.commentItem lists = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->lists_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lists(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void commentListResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonService.commentListResp)
  GOOGLE_DCHECK_NE(&from, this);
  const commentListResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const commentListResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonService.commentListResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonService.commentListResp)
    MergeFrom(*source);
  }
}

void commentListResp::MergeFrom(const commentListResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonService.commentListResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lists_.MergeFrom(from.lists_);
  if (from.has_count()) {
    set_count(from.count());
  }
}

void commentListResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonService.commentListResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void commentListResp::CopyFrom(const commentListResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonService.commentListResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool commentListResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->lists())) return false;
  return true;
}

void commentListResp::Swap(commentListResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void commentListResp::InternalSwap(commentListResp* other) {
  using std::swap;
  CastToBase(&lists_)->InternalSwap(CastToBase(&other->lists_));
  swap(count_, other->count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata commentListResp::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void getCommentReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int getCommentReq::kUserIdFieldNumber;
const int getCommentReq::kBookIdFieldNumber;
const int getCommentReq::kPageNumFieldNumber;
const int getCommentReq::kLinesFieldNumber;
const int getCommentReq::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

getCommentReq::getCommentReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_getCommentReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonService.getCommentReq)
}
getCommentReq::getCommentReq(const getCommentReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_userid()) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  bookid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bookid()) {
    bookid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookid_);
  }
  ::memcpy(&pagenum_, &from.pagenum_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&pagenum_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:commonService.getCommentReq)
}

void getCommentReq::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bookid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pagenum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&pagenum_)) + sizeof(count_));
}

getCommentReq::~getCommentReq() {
  // @@protoc_insertion_point(destructor:commonService.getCommentReq)
  SharedDtor();
}

void getCommentReq::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bookid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void getCommentReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* getCommentReq::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const getCommentReq& getCommentReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_getCommentReq.base);
  return *internal_default_instance();
}


void getCommentReq::Clear() {
// @@protoc_insertion_point(message_clear_start:commonService.getCommentReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      userid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      bookid_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&pagenum_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&count_) -
        reinterpret_cast<char*>(&pagenum_)) + sizeof(count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool getCommentReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonService.getCommentReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string userId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "commonService.getCommentReq.userId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bookId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bookid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bookid().data(), static_cast<int>(this->bookid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "commonService.getCommentReq.bookId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pageNum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pagenum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pagenum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lines = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_lines();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lines_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 count = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonService.getCommentReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonService.getCommentReq)
  return false;
#undef DO_
}

void getCommentReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonService.getCommentReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string userId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commonService.getCommentReq.userId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  // optional string bookId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookid().data(), static_cast<int>(this->bookid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commonService.getCommentReq.bookId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->bookid(), output);
  }

  // optional int32 pageNum = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pagenum(), output);
  }

  // optional int32 lines = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->lines(), output);
  }

  // optional int32 count = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonService.getCommentReq)
}

::google::protobuf::uint8* getCommentReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:commonService.getCommentReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string userId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commonService.getCommentReq.userId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  // optional string bookId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bookid().data(), static_cast<int>(this->bookid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commonService.getCommentReq.bookId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bookid(), target);
  }

  // optional int32 pageNum = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pagenum(), target);
  }

  // optional int32 lines = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->lines(), target);
  }

  // optional int32 count = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonService.getCommentReq)
  return target;
}

size_t getCommentReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonService.getCommentReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string userId = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->userid());
    }

    // optional string bookId = 2;
    if (has_bookid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bookid());
    }

    // optional int32 pageNum = 3;
    if (has_pagenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pagenum());
    }

    // optional int32 lines = 4;
    if (has_lines()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lines());
    }

    // optional int32 count = 5;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getCommentReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonService.getCommentReq)
  GOOGLE_DCHECK_NE(&from, this);
  const getCommentReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const getCommentReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonService.getCommentReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonService.getCommentReq)
    MergeFrom(*source);
  }
}

void getCommentReq::MergeFrom(const getCommentReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonService.getCommentReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_userid();
      userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_bookid();
      bookid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookid_);
    }
    if (cached_has_bits & 0x00000004u) {
      pagenum_ = from.pagenum_;
    }
    if (cached_has_bits & 0x00000008u) {
      lines_ = from.lines_;
    }
    if (cached_has_bits & 0x00000010u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void getCommentReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonService.getCommentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getCommentReq::CopyFrom(const getCommentReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonService.getCommentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getCommentReq::IsInitialized() const {
  return true;
}

void getCommentReq::Swap(getCommentReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void getCommentReq::InternalSwap(getCommentReq* other) {
  using std::swap;
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bookid_.Swap(&other->bookid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pagenum_, other->pagenum_);
  swap(lines_, other->lines_);
  swap(count_, other->count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata getCommentReq::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

commonService::~commonService() {}

const ::google::protobuf::ServiceDescriptor* commonService::descriptor() {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* commonService::GetDescriptor() {
  return descriptor();
}

void commonService::addCommentFun(::google::protobuf::RpcController* controller,
                         const ::commonService::commentItem*,
                         ::commonService::commonResp*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method addCommentFun() not implemented.");
  done->Run();
}

void commonService::delCommentFun(::google::protobuf::RpcController* controller,
                         const ::commonService::DelCommentReq*,
                         ::commonService::commonResp*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method delCommentFun() not implemented.");
  done->Run();
}

void commonService::getCommentFun(::google::protobuf::RpcController* controller,
                         const ::commonService::getCommentReq*,
                         ::commonService::commentListResp*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method getCommentFun() not implemented.");
  done->Run();
}

void commonService::getCommentRecordFun(::google::protobuf::RpcController* controller,
                         const ::commonService::getCommentReq*,
                         ::commonService::commentListResp*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method getCommentRecordFun() not implemented.");
  done->Run();
}

void commonService::delCommentRecordFun(::google::protobuf::RpcController* controller,
                         const ::commonService::DelCommentReq*,
                         ::commonService::commonResp*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method delCommentRecordFun() not implemented.");
  done->Run();
}

void commonService::addSupportFun(::google::protobuf::RpcController* controller,
                         const ::commonService::supportReq*,
                         ::commonService::commonResp*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method addSupportFun() not implemented.");
  done->Run();
}

void commonService::delSupportFun(::google::protobuf::RpcController* controller,
                         const ::commonService::supportReq*,
                         ::commonService::commonResp*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method delSupportFun() not implemented.");
  done->Run();
}

void commonService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_common_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      addCommentFun(controller,
             ::google::protobuf::down_cast<const ::commonService::commentItem*>(request),
             ::google::protobuf::down_cast< ::commonService::commonResp*>(response),
             done);
      break;
    case 1:
      delCommentFun(controller,
             ::google::protobuf::down_cast<const ::commonService::DelCommentReq*>(request),
             ::google::protobuf::down_cast< ::commonService::commonResp*>(response),
             done);
      break;
    case 2:
      getCommentFun(controller,
             ::google::protobuf::down_cast<const ::commonService::getCommentReq*>(request),
             ::google::protobuf::down_cast< ::commonService::commentListResp*>(response),
             done);
      break;
    case 3:
      getCommentRecordFun(controller,
             ::google::protobuf::down_cast<const ::commonService::getCommentReq*>(request),
             ::google::protobuf::down_cast< ::commonService::commentListResp*>(response),
             done);
      break;
    case 4:
      delCommentRecordFun(controller,
             ::google::protobuf::down_cast<const ::commonService::DelCommentReq*>(request),
             ::google::protobuf::down_cast< ::commonService::commonResp*>(response),
             done);
      break;
    case 5:
      addSupportFun(controller,
             ::google::protobuf::down_cast<const ::commonService::supportReq*>(request),
             ::google::protobuf::down_cast< ::commonService::commonResp*>(response),
             done);
      break;
    case 6:
      delSupportFun(controller,
             ::google::protobuf::down_cast<const ::commonService::supportReq*>(request),
             ::google::protobuf::down_cast< ::commonService::commonResp*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& commonService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::commonService::commentItem::default_instance();
    case 1:
      return ::commonService::DelCommentReq::default_instance();
    case 2:
      return ::commonService::getCommentReq::default_instance();
    case 3:
      return ::commonService::getCommentReq::default_instance();
    case 4:
      return ::commonService::DelCommentReq::default_instance();
    case 5:
      return ::commonService::supportReq::default_instance();
    case 6:
      return ::commonService::supportReq::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& commonService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::commonService::commonResp::default_instance();
    case 1:
      return ::commonService::commonResp::default_instance();
    case 2:
      return ::commonService::commentListResp::default_instance();
    case 3:
      return ::commonService::commentListResp::default_instance();
    case 4:
      return ::commonService::commonResp::default_instance();
    case 5:
      return ::commonService::commonResp::default_instance();
    case 6:
      return ::commonService::commonResp::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

commonService_Stub::commonService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
commonService_Stub::commonService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
commonService_Stub::~commonService_Stub() {
  if (owns_channel_) delete channel_;
}

void commonService_Stub::addCommentFun(::google::protobuf::RpcController* controller,
                              const ::commonService::commentItem* request,
                              ::commonService::commonResp* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void commonService_Stub::delCommentFun(::google::protobuf::RpcController* controller,
                              const ::commonService::DelCommentReq* request,
                              ::commonService::commonResp* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void commonService_Stub::getCommentFun(::google::protobuf::RpcController* controller,
                              const ::commonService::getCommentReq* request,
                              ::commonService::commentListResp* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void commonService_Stub::getCommentRecordFun(::google::protobuf::RpcController* controller,
                              const ::commonService::getCommentReq* request,
                              ::commonService::commentListResp* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void commonService_Stub::delCommentRecordFun(::google::protobuf::RpcController* controller,
                              const ::commonService::DelCommentReq* request,
                              ::commonService::commonResp* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void commonService_Stub::addSupportFun(::google::protobuf::RpcController* controller,
                              const ::commonService::supportReq* request,
                              ::commonService::commonResp* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}
void commonService_Stub::delSupportFun(::google::protobuf::RpcController* controller,
                              const ::commonService::supportReq* request,
                              ::commonService::commonResp* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(6),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace commonService
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::commonService::commonResp* Arena::CreateMaybeMessage< ::commonService::commonResp >(Arena* arena) {
  return Arena::CreateInternal< ::commonService::commonResp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::commonService::supportReq* Arena::CreateMaybeMessage< ::commonService::supportReq >(Arena* arena) {
  return Arena::CreateInternal< ::commonService::supportReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::commonService::commentItem* Arena::CreateMaybeMessage< ::commonService::commentItem >(Arena* arena) {
  return Arena::CreateInternal< ::commonService::commentItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::commonService::DelCommentReq* Arena::CreateMaybeMessage< ::commonService::DelCommentReq >(Arena* arena) {
  return Arena::CreateInternal< ::commonService::DelCommentReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::commonService::commentListResp* Arena::CreateMaybeMessage< ::commonService::commentListResp >(Arena* arena) {
  return Arena::CreateInternal< ::commonService::commentListResp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::commonService::getCommentReq* Arena::CreateMaybeMessage< ::commonService::getCommentReq >(Arena* arena) {
  return Arena::CreateInternal< ::commonService::getCommentReq >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
